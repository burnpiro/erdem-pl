{"version":3,"sources":["webpack:///./src/components/Diagrams/AttentionLayer/AttentionLayer.module.scss","webpack:///./src/components/Diagrams/AttentionLayer/data.js","webpack:///./src/components/Diagrams/AttentionLayer/AttentionLayer.js"],"names":["module","exports","katex","require","ETooltip1","YTooltip1","ATooltip","State1Text","renderToString","State2Text","State3Text","step1","attention","color","borderColor","size","boxSize","blockName","blockType","items","id","val","tooltipValue","position","inputs","lines","from","to","orientation","points","query","queryWeights","queVal","values","valuesWeights","ilVal","keys","keysWeights","keyVal","zVal","output","text","sizeX","sizeY","softmax","operations","circleR","step2","map","el","match","idx","outputs","step3","step4","name","namePosition","steps","AttentionLayer","useState","step","setStep","currStep","className","styles","DiagramGenerator","data","animationHeight","animationWidth","ProcessControls","onStepForward","onStepBackward","prevDisabled","nextDisabled","Object","length"],"mappings":"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","file":"4fe6dc47402f9c0f40f78cfd09ebae8865a0bdc1-70a1c3b4484847c61242.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"attention-continaer\":\"AttentionLayer-module--attention-continaer--3KtzD\"};","import React from 'react';\nconst katex = require(`katex`);\n\nconst firstRowPosition = 0.01;\nconst boxPadding = 0.07;\nconst bottomRowPosition = 0.8;\nconst topRowPosition = 0.1;\nconst animationWidth = 1200;\nconst animationHeight = 700;\nconst boxSize = 50;\nconst circleR = 16;\n\nconst ETooltip1 = `\n<span>\nE<sub>i,j</sub> = <strong style=\"color: mediumpurple;\">Q<sub>i</sub></strong><strong style=\"color: limegreen\">X<sub>j</sub></strong> / sqrt(D<sub>Q</sub>)\n</span>\n`;\nconst ETooltip2 = `\n<span>\nE<sub>i,j</sub> = <strong style=\"color: mediumpurple;\">Q<sub>i</sub></strong><strong style=\"color: darkorange\">K<sub>j</sub></strong> / sqrt(D<sub>Q</sub>)\n</span>\n`;\nconst KTooltip = `\n<span>\n<strong style=\"color: darkorange\">K<sub>i</sub></strong> = <strong style=\"color: limegreen;\">X<sub>i</sub></strong><strong style=\"color: darkorange\">W<sub>Ki</sub></strong>\n</span>\n`;\nconst VTooltip = `\n<span>\n<strong style=\"color: royalblue\">V<sub>i</sub></strong> = <strong style=\"color: limegreen;\">X<sub>i</sub></strong><strong style=\"color: royalblue\">W<sub>Vi</sub></strong>\n</span>\n`;\nconst QTooltip = `\n<span>\n<strong style=\"color: mediumpurple\">Q<sub>i</sub></strong> = <strong style=\"color: limegreen;\">X<sub>i</sub></strong><strong style=\"color: mediumpurple\">W<sub>Qi</sub></strong>\n</span>\n`;\nconst YTooltip1 = `\n<span>\n<strong style=\"color: hotpink\">Y<sub>i</sub></strong> = ∑<sub>j</sub>(<span style=\"\">A<sub>i,j</sub></span><strong style=\"color: limegreen\">X<sub>j</sub></strong>)\n</span>\n`;\nconst YTooltip2 = `\n<span>\n<strong style=\"color: hotpink\">Y<sub>i</sub></strong> = ∑<sub>j</sub>(<span style=\"\">A<sub>i,j</sub></span><strong style=\"color: royalblue\">V<sub>j</sub></strong>)\n</span>\n`;\n\nconst ATooltip = `\n  <span>\n  A = softmax(E, dim=1)\n  </span>\n`;\n\nconst State1Text = `<div style=\"text-align: left; margin: 10px 0; width: 95%; height: 95%\">\n<div style=\"text-align: center; font-weight: bold;\">Attention Layer</div>\n<b>Input vectors</b>: <strong style=\"color: limegreen;\">X</strong> (shape ${katex.renderToString(\n  'N_X \\\\times D_X'\n)})<br/>\n<b>Query vectors</b>: <strong style=\"color: mediumpurple;\">Q</strong> (Shape ${katex.renderToString(\n  'N_Q \\\\times D_Q'\n)})<br/><br/>\n<b>Similarity function</b>: <i>scaled dot product</i><br/>\n<b>Similarities</b>: ${katex.renderToString(\n  'E = \\\\textcolor{mediumpurple}{Q}\\\\textcolor{limegreen}{X^T}'\n)} (shape ${katex.renderToString('N_Q \\\\times N_X')}), ${katex.renderToString(\n  'E_{i,j} = \\\\textcolor{mediumpurple}{Q_i} \\\\cdot \\\\textcolor{limegreen}{X_j} / \\\\sqrt{D_Q}'\n)}<br/>\n<b>Attention weights</b>: ${katex.renderToString(\n  'A = \\\\text{softmax}(E, dim=1)'\n)} (shape ${katex.renderToString('N_Q \\\\times N_X')})<br/>\n<b>Output</b>: ${katex.renderToString(\n  '\\\\textcolor{hotpink}{Y} = A\\\\textcolor{limegreen}{X}'\n)} (shape ${katex.renderToString(\n  'N_Q \\\\times D_X'\n)}) where ${katex.renderToString(\n  '\\\\textcolor{hotpink}{Y_i} = \\\\sum_j(A_{i,j},\\\\textcolor{limegreen}{X_j})'\n)}<br/>\n</div>`;\n\nconst State2Text = `<div style=\"text-align: left; margin: 10px 0; width: 95%; height: 95%\">\n<div style=\"text-align: center; font-weight: bold;\">Attention Layer</div>\n<b>Input vectors</b>: <strong style=\"color: limegreen;\">X</strong> (shape ${katex.renderToString(\n  'N_X \\\\times D_X'\n)})<br/>\n<b>Query vectors</b>: <strong style=\"color: mediumpurple;\">Q</strong> (Shape ${katex.renderToString(\n  'N_Q \\\\times D_Q'\n)})<br/>\n<b>Key matrix</b>: <strong style=\"color: darkorange;\">W<sub>K</sub></strong> (Shape ${katex.renderToString(\n  'D_X \\\\times D_Q'\n)})<br/>\n<b>Value matrix</b>: <strong style=\"color: royalblue;\">W<sub>V</sub></strong> (Shape ${katex.renderToString(\n  'D_X \\\\times D_V'\n)})<br/><br/>\n<b>Key vectors</b>: ${katex.renderToString(\n  '\\\\textcolor{darkorange}{K} = \\\\textcolor{limegreen}{X}\\\\textcolor{darkorange}{W_K}'\n)} (Shape ${katex.renderToString('N_X \\\\times D_Q')})<br/>\n<b>Value vectors</b>: ${katex.renderToString(\n  '\\\\textcolor{royalblue}{V} = \\\\textcolor{limegreen}{X}\\\\textcolor{royalblue}{W_V}'\n)} (Shape ${katex.renderToString('N_X \\\\times D_V')})<br/>\n<b>Similarity function</b>: <i>scaled dot product</i><br/>\n<b>Similarities</b>: ${katex.renderToString(\n  'E = \\\\textcolor{mediumpurple}{Q}\\\\textcolor{darkorange}{K^T}'\n)} (shape ${katex.renderToString('N_Q \\\\times N_X')}), ${katex.renderToString(\n  'E_{i,j} = \\\\textcolor{mediumpurple}{Q_i} \\\\cdot \\\\textcolor{darkorange}{K_j} / \\\\sqrt{D_Q}'\n)}<br/>\n<b>Attention weights</b>: ${katex.renderToString(\n  'A = \\\\text{softmax}(E, dim=1)'\n)} (shape ${katex.renderToString('N_Q \\\\times N_X')})<br/>\n<b>Output</b>: ${katex.renderToString(\n  '\\\\textcolor{hotpink}{Y} = A\\\\textcolor{royalblue}{V}'\n)} (shape ${katex.renderToString(\n  'N_Q \\\\times D_V'\n)}) where ${katex.renderToString(\n  '\\\\textcolor{hotpink}{Y_i} = \\\\sum_j(A_{i,j},\\\\textcolor{royalblue}{V_j})'\n)}<br/>\n</div>`;\n\nconst State3Text = `<div style=\"text-align: left; margin: 10px 0; width: 95%; height: 95%\">\n<div style=\"text-align: center; font-weight: bold;\">Self-Attention Layer</div>\n<b>Input vectors</b>: <strong style=\"color: limegreen;\">X</strong> (shape ${katex.renderToString(\n  'N_X \\\\times D_X'\n)})<br/>\n<b>Key matrix</b>: <strong style=\"color: darkorange;\">W<sub>K</sub></strong> (Shape ${katex.renderToString(\n  'D_X \\\\times D_Q'\n)})<br/>\n<b>Value matrix</b>: <strong style=\"color: royalblue;\">W<sub>V</sub></strong> (Shape ${katex.renderToString(\n  'D_X \\\\times D_V'\n)})<br/>\n<b>Query matrix</b>: <strong style=\"color: mediumpurple;\">W<sub>Q</sub></strong> (Shape ${katex.renderToString(\n  'D_X \\\\times D_Q'\n)})<br/><br/>\n<b>Query vectors</b>: ${katex.renderToString(\n  '\\\\textcolor{mediumpurple}{Q} = \\\\textcolor{limegreen}{X}\\\\textcolor{mediumpurple}{W_Q}'\n)} (Shape ${katex.renderToString('N_X \\\\times D_Q')})<br/>\n<b>Key vectors</b>: ${katex.renderToString(\n  '\\\\textcolor{darkorange}{K} = \\\\textcolor{limegreen}{X}\\\\textcolor{darkorange}{W_K}'\n)} (Shape ${katex.renderToString('N_X \\\\times D_Q')})<br/>\n<b>Value vectors</b>: ${katex.renderToString(\n  '\\\\textcolor{royalblue}{V} = \\\\textcolor{limegreen}{X}\\\\textcolor{royalblue}{W_V}'\n)} (Shape ${katex.renderToString('N_X \\\\times D_V')})<br/>\n<b>Similarity function</b>: <i>scaled dot product</i><br/>\n<b>Similarities</b>: ${katex.renderToString(\n  'E = \\\\textcolor{mediumpurple}{Q}\\\\textcolor{darkorange}{K^T}'\n)} (shape ${katex.renderToString('N_X \\\\times N_X')}), ${katex.renderToString(\n  'E_{i,j} = \\\\textcolor{mediumpurple}{Q_i} \\\\cdot \\\\textcolor{darkorange}{K_j} / \\\\sqrt{D_Q}'\n)}<br/>\n<b>Attention weights</b>: ${katex.renderToString(\n  'A = \\\\text{softmax}(E, dim=1)'\n)} (shape ${katex.renderToString('N_X \\\\times N_X')})<br/>\n<b>Output</b>: ${katex.renderToString(\n  '\\\\textcolor{hotpink}{Y} = A\\\\textcolor{royalblue}{V}'\n)} (shape ${katex.renderToString(\n  'N_X \\\\times D_V'\n)}) where ${katex.renderToString(\n  '\\\\textcolor{hotpink}{Y_i} = \\\\sum_j(A_{i,j},\\\\textcolor{royalblue}{V_j})'\n)}<br/>\n</div>`;\n\nconst step1 = {\n  attention: {\n    color: '#E2CFC4',\n    borderColor: '#523828',\n    size: `${boxSize}px`,\n    blockName: 'attention',\n    blockType: 'rect',\n    items: [\n      {\n        id: 'e11',\n        val: `<span>\n          E<sub>1,1</sub>\n        </span>`,\n        tooltipValue: ETooltip1,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3,\n          (bottomRowPosition - 0.3) * animationHeight,\n        ],\n      },\n      {\n        id: 'e12',\n        val: `<span>\n          E<sub>2,1</sub>\n        </span>`,\n        tooltipValue: ETooltip1,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3 + boxSize,\n          (bottomRowPosition - 0.3) * animationHeight,\n        ],\n      },\n      {\n        id: 'e13',\n        val: `<span>\n          E<sub>3,1</sub>\n        </span>`,\n        tooltipValue: ETooltip1,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3 + boxSize * 2,\n          (bottomRowPosition - 0.3) * animationHeight,\n        ],\n      },\n      {\n        id: 'e21',\n        val: `<span>\n          E<sub>1,2</sub>\n        </span>`,\n        tooltipValue: ETooltip1,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3,\n          (bottomRowPosition - 0.3) * animationHeight + boxSize,\n        ],\n      },\n      {\n        id: 'e22',\n        val: `<span>\n          E<sub>2,2</sub>\n        </span>`,\n        tooltipValue: ETooltip1,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3 + boxSize,\n          (bottomRowPosition - 0.3) * animationHeight + boxSize,\n        ],\n      },\n      {\n        id: 'e23',\n        val: `<span>\n          E<sub>3,2</sub>\n        </span>`,\n        tooltipValue: ETooltip1,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3 + boxSize * 2,\n          (bottomRowPosition - 0.3) * animationHeight + boxSize,\n        ],\n      },\n      {\n        id: 'e31',\n        val: `<span>\n          E<sub>1,3</sub>\n        </span>`,\n        tooltipValue: ETooltip1,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3,\n          (bottomRowPosition - 0.3) * animationHeight + boxSize * 2,\n        ],\n      },\n      {\n        id: 'e32',\n        val: `<span>\n          E<sub>2,3</sub>\n        </span>`,\n        tooltipValue: ETooltip1,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3 + boxSize,\n          (bottomRowPosition - 0.3) * animationHeight + boxSize * 2,\n        ],\n      },\n      {\n        id: 'e33',\n        val: `<span>\n          E<sub>3,3</sub>\n        </span>`,\n        tooltipValue: ETooltip1,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3 + boxSize * 2,\n          (bottomRowPosition - 0.3) * animationHeight + boxSize * 2,\n        ],\n      },\n      {\n        id: 'a11',\n        val: `<span>\n          A<sub>1,1</sub>\n        </span>`,\n        tooltipValue: ATooltip,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3,\n          (bottomRowPosition - 0.3) * animationHeight - boxSize * 4 - 25,\n        ],\n      },\n      {\n        id: 'a12',\n        val: `<span>\n          A<sub>2,1</sub>\n        </span>`,\n        tooltipValue: ATooltip,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3 + boxSize,\n          (bottomRowPosition - 0.3) * animationHeight - boxSize * 4 - 25,\n        ],\n      },\n      {\n        id: 'a13',\n        val: `<span>\n          A<sub>3,1</sub>\n        </span>`,\n        tooltipValue: ATooltip,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3 + boxSize * 2,\n          (bottomRowPosition - 0.3) * animationHeight - boxSize * 4 - 25,\n        ],\n      },\n      {\n        id: 'a21',\n        val: `<span>\n          A<sub>1,2</sub>\n        </span>`,\n        tooltipValue: ATooltip,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3,\n          (bottomRowPosition - 0.3) * animationHeight - boxSize * 3 - 25,\n        ],\n      },\n      {\n        id: 'a22',\n        val: `<span>\n          A<sub>2,2</sub>\n        </span>`,\n        tooltipValue: ATooltip,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3 + boxSize,\n          (bottomRowPosition - 0.3) * animationHeight - boxSize * 3 - 25,\n        ],\n      },\n      {\n        id: 'a23',\n        val: `<span>\n          A<sub>3,2</sub>\n        </span>`,\n        tooltipValue: ATooltip,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3 + boxSize * 2,\n          (bottomRowPosition - 0.3) * animationHeight - boxSize * 3 - 25,\n        ],\n      },\n      {\n        id: 'a31',\n        val: `<span>\n          A<sub>1,3</sub>\n        </span>`,\n        tooltipValue: ATooltip,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3,\n          (bottomRowPosition - 0.3) * animationHeight - boxSize * 2 - 25,\n        ],\n      },\n      {\n        id: 'a32',\n        val: `<span>\n          A<sub>2,3</sub>\n        </span>`,\n        tooltipValue: ATooltip,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3 + boxSize,\n          (bottomRowPosition - 0.3) * animationHeight - boxSize * 2 - 25,\n        ],\n      },\n      {\n        id: 'a33',\n        val: `<span>\n          A<sub>3,3</sub>\n        </span>`,\n        tooltipValue: ATooltip,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3 + boxSize * 2,\n          (bottomRowPosition - 0.3) * animationHeight - boxSize * 2 - 25,\n        ],\n      },\n    ],\n  },\n  inputs: {\n    color: '#CAFFBF',\n    borderColor: '#147A00',\n    size: `${boxSize}px`,\n    blockName: 'inputs',\n    blockType: 'rect',\n    items: [\n      {\n        id: 'X1',\n        val: `<span>\n          X<sub>1</sub>\n        </span>`,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 2,\n          (bottomRowPosition - 0.3) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 2 + boxSize,\n              (bottomRowPosition - 0.3) * animationHeight + boxSize / 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3,\n              (bottomRowPosition - 0.3) * animationHeight + boxSize / 2,\n            ],\n            orientation: 'horizontal',\n          },\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 2,\n              (bottomRowPosition - 0.3) * animationHeight + boxSize / 2,\n            ],\n            points: [\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 2 -\n                  boxSize / 2,\n                (bottomRowPosition - 0.3) * animationHeight + boxSize / 2,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 2 -\n                  boxSize / 2,\n                (bottomRowPosition - 0.3) * animationHeight - boxSize * 4,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3,\n              (bottomRowPosition - 0.3) * animationHeight - boxSize * 4,\n            ],\n            orientation: 'multi-squared',\n          },\n        ],\n      },\n      {\n        id: 'X2',\n        val: `<span>\n          X<sub>2</sub>\n        </span>`,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 2,\n          (bottomRowPosition - 0.3) * animationHeight + boxSize,\n        ],\n        lines: [\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 2 + boxSize,\n              (bottomRowPosition - 0.3) * animationHeight + boxSize * 1.5,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3,\n              (bottomRowPosition - 0.3) * animationHeight + boxSize * 1.5,\n            ],\n            orientation: 'horizontal',\n          },\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 2,\n              (bottomRowPosition - 0.3) * animationHeight + boxSize * 1.5,\n            ],\n            points: [\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 2 -\n                  boxSize / 2 -\n                  25,\n                (bottomRowPosition - 0.3) * animationHeight + boxSize * 1.5,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 2 -\n                  boxSize / 2 -\n                  25,\n                (bottomRowPosition - 0.3) * animationHeight - boxSize * 3,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3,\n              (bottomRowPosition - 0.3) * animationHeight - boxSize * 3,\n            ],\n            orientation: 'multi-squared',\n          },\n        ],\n      },\n      {\n        id: 'X3',\n        val: `<span>\n          X<sub>3</sub>\n        </span>`,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 2,\n          (bottomRowPosition - 0.3) * animationHeight + boxSize * 2,\n        ],\n        lines: [\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 2 + boxSize,\n              (bottomRowPosition - 0.3) * animationHeight + boxSize * 2.5,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3,\n              (bottomRowPosition - 0.3) * animationHeight + boxSize * 2.5,\n            ],\n            orientation: 'horizontal',\n          },\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 2,\n              (bottomRowPosition - 0.3) * animationHeight + boxSize * 2.5,\n            ],\n            points: [\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 2 -\n                  boxSize / 2 -\n                  50,\n                (bottomRowPosition - 0.3) * animationHeight + boxSize * 2.5,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 2 -\n                  boxSize / 2 -\n                  50,\n                (bottomRowPosition - 0.3) * animationHeight - boxSize * 2,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3,\n              (bottomRowPosition - 0.3) * animationHeight - boxSize * 2,\n            ],\n            orientation: 'multi-squared',\n          },\n        ],\n      },\n    ],\n  },\n  query: {\n    color: '#DCD6FF',\n    borderColor: '#6347FF',\n    size: `${boxSize}px`,\n    blockName: 'query',\n    blockType: 'rect',\n    items: [\n      {\n        id: 'Q1',\n        val: `<span>\n          Q<sub>1</sub>\n        </span>`,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3,\n          (bottomRowPosition - 0.2) * animationHeight + boxSize * 2,\n        ],\n        lines: [\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                boxSize / 2,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize * 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                boxSize / 2,\n              (bottomRowPosition - 0.3) * animationHeight + boxSize * 3,\n            ],\n            orientation: 'vertical',\n          },\n        ],\n      },\n      {\n        id: 'Q2',\n        val: `<span>\n          Q<sub>2</sub>\n        </span>`,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3 + boxSize,\n          (bottomRowPosition - 0.2) * animationHeight + boxSize * 2,\n        ],\n        lines: [\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                boxSize +\n                boxSize / 2,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize * 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                boxSize +\n                boxSize / 2,\n              (bottomRowPosition - 0.3) * animationHeight + boxSize * 3,\n            ],\n            orientation: 'vertical',\n          },\n        ],\n      },\n      {\n        id: 'Q3',\n        val: `<span>\n          Q<sub>3</sub>\n        </span>`,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3 + boxSize * 2,\n          (bottomRowPosition - 0.2) * animationHeight + boxSize * 2,\n        ],\n        lines: [\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                boxSize * 2.5,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize * 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                boxSize * 2.5,\n              (bottomRowPosition - 0.3) * animationHeight + boxSize * 3,\n            ],\n            orientation: 'vertical',\n          },\n        ],\n      },\n    ],\n  },\n  queryWeights: {\n    color: '#EEEBFF',\n    borderColor: '#A899FF',\n    size: `${boxSize}px`,\n    blockName: 'query-weights',\n    blockType: 'rect',\n    items: [],\n  },\n  queVal: {\n    color: '#DCD6FF',\n    borderColor: '#6347FF',\n    blockName: 'que-vectors',\n    size: `${boxSize / 2}px`,\n    blockType: 'rect',\n    items: [],\n  },\n  values: {\n    color: '#9BF6FF',\n    borderColor: '#00838F',\n    size: `${boxSize}px`,\n    blockName: 'values',\n    blockType: 'rect',\n    items: [],\n  },\n  valuesWeights: {\n    color: '#C2FAFF',\n    borderColor: '#5CF1FF',\n    size: `${boxSize}px`,\n    blockName: 'values-weights',\n    blockType: 'rect',\n    items: [],\n  },\n  ilVal: {\n    color: '#9BF6FF',\n    borderColor: '#00838F',\n    blockName: 'val-vectors',\n    size: `${boxSize / 2}px`,\n    blockType: 'rect',\n    items: [],\n  },\n  keys: {\n    color: '#FFD199',\n    borderColor: '#A35A00',\n    size: `${boxSize}px`,\n    blockName: 'keys',\n    blockType: 'rect',\n    items: [],\n  },\n  keysWeights: {\n    color: '#FFEDD6',\n    borderColor: '#FFAF47',\n    size: `${boxSize}px`,\n    blockName: 'keys-weights',\n    blockType: 'rect',\n    items: [],\n  },\n  keyVal: {\n    color: '#FFD199',\n    borderColor: '#A35A00',\n    blockName: 'key-vectors',\n    size: `${boxSize / 2}px`,\n    blockType: 'rect',\n    items: [],\n  },\n  zVal: {\n    color: '#FFEBFF',\n    borderColor: '#FF47FF',\n    blockName: 'z-vectors',\n    size: `${boxSize / 2}px`,\n    blockType: 'rect',\n    items: [],\n  },\n  output: {\n    color: '#FFEBFF',\n    borderColor: '#FF47FF',\n    size: `${boxSize}px`,\n    blockName: 'output',\n    blockType: 'rect',\n    items: [\n      {\n        id: 'Y1',\n        val: `<span>\n          Y<sub>1</sub>\n        </span>`,\n        tooltipValue: YTooltip1,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3,\n          boxSize,\n        ],\n        lines: [\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                boxSize / 2,\n              boxSize * 2 + 25,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                boxSize / 2,\n              boxSize * 2,\n            ],\n            orientation: 'vertical',\n          },\n        ],\n      },\n      {\n        id: 'Y2',\n        val: `<span>\n          Y<sub>2</sub>\n        </span>`,\n        tooltipValue: YTooltip1,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3 + boxSize,\n          boxSize,\n        ],\n        lines: [\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                boxSize * 1.5,\n              boxSize * 2 + 25,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                boxSize * 1.5,\n              boxSize * 2,\n            ],\n            orientation: 'vertical',\n          },\n        ],\n      },\n      {\n        id: 'Y3',\n        val: `<span>\n          Y<sub>3</sub>\n        </span>`,\n        tooltipValue: YTooltip1,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3 + boxSize * 2,\n          boxSize,\n        ],\n        lines: [\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                boxSize * 2.5,\n              boxSize * 2 + 25,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                boxSize * 2.5,\n              boxSize * 2,\n            ],\n            orientation: 'vertical',\n          },\n        ],\n      },\n    ],\n  },\n  text: {\n    color: '#CAFFBF',\n    borderColor: '#333',\n    sizeX: `300px`,\n    sizeY: `50px`,\n    blockName: 'text',\n    blockType: 'text',\n    items: [\n      {\n        id: 'initial-state',\n        val: State1Text,\n        sizeX: `650px`,\n        sizeY: `250px`,\n        position: [0.4 * animationWidth, 0.01 * animationHeight],\n      },\n    ],\n  },\n  softmax: {\n    color: '#CAFFBF',\n    borderColor: '#333',\n    sizeX: boxSize * 3,\n    sizeY: `25px`,\n    blockName: 'softmax',\n    blockType: 'text',\n    items: [\n      {\n        id: 'softmax-layer',\n        val: `<span>\n          softmax\n        </span>`,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3,\n          (bottomRowPosition - 0.3) * animationHeight - boxSize,\n        ],\n        lines: [\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                boxSize * 1.5,\n              (bottomRowPosition - 0.3) * animationHeight,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                boxSize * 1.5,\n              (bottomRowPosition - 0.3) * animationHeight - boxSize + 25,\n            ],\n            orientation: 'vertical',\n          },\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                boxSize * 1.5,\n              (bottomRowPosition - 0.3) * animationHeight - boxSize,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                boxSize * 1.5,\n              (bottomRowPosition - 0.3) * animationHeight - boxSize - 25,\n            ],\n            orientation: 'vertical',\n          },\n        ],\n      },\n    ],\n  },\n  operations: {\n    color: '#E2E2DF',\n    borderColor: '#40403A',\n    size: `${circleR}px`,\n    blockName: 'operations',\n    blockType: 'circle',\n    items: [],\n  },\n};\n\nconst step2 = {\n  ...step1,\n  text: {\n    ...step1.text,\n    items: step1.text.items.map(el => ({\n      ...el,\n      sizeY: `380px`,\n      val: State2Text,\n    })),\n  },\n  attention: {\n    ...step1.attention,\n    items: step1.attention.items.map(el => ({\n      ...el,\n      tooltipValue: el.id.match(/e/gi) != null ? ETooltip2 : el.tooltipValue,\n    })),\n  },\n  inputs: {\n    ...step1.inputs,\n    items: step1.inputs.items.map((el, idx) => {\n      return {\n        ...el,\n        position: [el.position[0] - boxSize * 3.5, el.position[1]],\n        lines: [\n          {\n            from: [\n              el.position[0] - boxSize * 2.5,\n              el.position[1] + boxSize / 2,\n            ],\n            points: [\n              [\n                el.position[0] - boxSize * 2.5 + (idx + 1) * 10 + 5,\n                el.position[1] + boxSize / 2,\n              ],\n              [\n                el.position[0] - boxSize * 2.5 + (idx + 1) * 10 + 5,\n                step1.attention.items[9].position[1] +\n                  idx * boxSize +\n                  boxSize / 2,\n              ],\n            ],\n            to: [\n              el.position[0] - boxSize * 1.5,\n              step1.attention.items[9].position[1] +\n                idx * boxSize +\n                boxSize / 2,\n            ],\n            color: step1.valuesWeights.borderColor,\n            orientation: 'multi-squared',\n          },\n          {\n            from: [\n              el.position[0] - boxSize * 2.5,\n              el.position[1] + boxSize / 2,\n            ],\n            to: [el.position[0] - boxSize * 1.5, el.position[1] + boxSize / 2],\n          },\n        ],\n      };\n    }),\n  },\n  keys: {\n    ...step1.keys,\n    items: [\n      ...step1.inputs.items.map((el, idx) => {\n        return {\n          ...el,\n          id: `K${idx + 1}`,\n          val: `<span>\n            K<sub>${idx + 1}</sub>\n          </span>`,\n          tooltipValue: KTooltip,\n          lines: [el.lines[0]],\n        };\n      }),\n    ],\n  },\n  keysWeights: {\n    ...step1.keysWeights,\n    items: [\n      ...step1.inputs.items.map((el, idx) => {\n        return {\n          ...el,\n          id: `Wk${idx + 1}`,\n          val: `<span>\n            W<sub>K${idx + 1}</sub>\n          </span>`,\n          position: [el.position[0] - boxSize * 1.5, el.position[1]],\n          lines: [\n            {\n              from: [el.lines[0].from[0] - boxSize * 1.5, el.lines[0].from[1]],\n              to: [el.lines[0].to[0] - boxSize * 2, el.lines[0].from[1]],\n              orientation: 'horizontal',\n            },\n          ],\n        };\n      }),\n    ],\n  },\n  values: {\n    ...step1.values,\n    items: step1.inputs.items.map((el, idx) => {\n      return {\n        ...el,\n        id: `V${idx + 1}`,\n        val: `<span>\n          V<sub>${idx + 1}</sub>\n        </span>`,\n        tooltipValue: VTooltip,\n        position: [\n          el.position[0],\n          step1.attention.items[9].position[1] + idx * boxSize,\n        ],\n        lines: [\n          {\n            from: [\n              el.lines[0].from[0],\n              step1.attention.items[9].position[1] +\n                idx * boxSize +\n                boxSize / 2,\n            ],\n            to: [\n              el.lines[0].to[0],\n              step1.attention.items[9].position[1] +\n                idx * boxSize +\n                boxSize / 2,\n            ],\n            orientation: 'horizontal',\n          },\n        ],\n      };\n    }),\n  },\n  valuesWeights: {\n    ...step1.valuesWeights,\n    items: step1.inputs.items.map((el, idx) => {\n      return {\n        ...el,\n        id: `Wv${idx + 1}`,\n        val: `<span>\n          W<sub>V${idx + 1}</sub>\n        </span>`,\n        position: [\n          el.position[0] - boxSize * 1.5,\n          step1.attention.items[9].position[1] + idx * boxSize,\n        ],\n        lines: [\n          {\n            from: [\n              el.lines[0].from[0] - boxSize * 1.5,\n              step1.attention.items[9].position[1] +\n                idx * boxSize +\n                boxSize / 2,\n            ],\n            to: [\n              el.lines[0].to[0] - boxSize * 2,\n              step1.attention.items[9].position[1] +\n                idx * boxSize +\n                boxSize / 2,\n            ],\n            orientation: 'horizontal',\n          },\n        ],\n      };\n    }),\n  },\n  outputs: {\n    ...step1.output,\n    items: step1.output.items.map(el => ({ ...el, tooltipValue: YTooltip2 })),\n  },\n};\n\nconst step3 = {\n  ...step2,\n  text: {\n    ...step2.text,\n    items: step2.text.items.map(el => ({\n      ...el,\n      sizeY: `430px`,\n      val: State3Text,\n    })),\n  },\n  query: {\n    ...step2.query,\n    items: step2.query.items.map(el => ({ ...el, tooltipValue: QTooltip })),\n  },\n  queryWeights: {\n    ...step2.queryWeights,\n    items: step2.query.items.map((el, idx) => {\n      return {\n        ...el,\n        id: `Wq${idx + 1}`,\n        val: `<span>\n          W<sub>Q${idx + 1}</sub>\n        </span>`,\n        position: [el.position[0], el.position[1] + boxSize * 1.5],\n        lines: [\n          {\n            from: [el.lines[0].from[0], el.lines[0].from[1] + boxSize * 1.5],\n            to: [el.lines[0].to[0], el.lines[0].to[1] + boxSize * 1.5],\n            orientation: 'vertical',\n          },\n          {\n            from: [\n              step2.inputs.items[0].position[0] + boxSize + (idx + 1) * 10,\n              step2.inputs.items[0].position[1] + boxSize * (idx + 0.5),\n            ],\n            points: [\n              [\n                step2.inputs.items[0].position[0] + boxSize + (idx + 1) * 10,\n                el.lines[0].from[1] + boxSize * 2.5 + (idx + 1) * 10,\n              ],\n              [\n                el.lines[0].from[0],\n                el.lines[0].from[1] + boxSize * 2.5 + (idx + 1) * 10,\n              ],\n            ],\n            to: [el.lines[0].from[0], el.lines[0].from[1] + boxSize * 2.5],\n            color: step1.queryWeights.borderColor,\n            orientation: 'multi-squared',\n          },\n        ],\n      };\n    }),\n  },\n};\n\nconst step4 = {\n  ...step3,\n  zVal: {\n    ...step3.zVal,\n    items: [\n      {\n        position: [\n          step3.text.items[0].position[0] + boxSize * 10.5,\n          (bottomRowPosition - 0.04) * animationHeight + boxSize,\n        ],\n      },\n      {\n        name: `Z`,\n        namePosition: 'top',\n        position: [\n          step3.text.items[0].position[0] + boxSize * 11,\n          (bottomRowPosition - 0.04) * animationHeight + boxSize,\n        ],\n      },\n      {\n        position: [\n          step3.text.items[0].position[0] + boxSize * 11.5,\n          (bottomRowPosition - 0.04) * animationHeight + boxSize,\n        ],\n      },\n      {\n        position: [\n          step3.text.items[0].position[0] + boxSize * 10.5,\n          (bottomRowPosition - 0.04) * animationHeight + boxSize * 1.5,\n        ],\n      },\n      {\n        position: [\n          step3.text.items[0].position[0] + boxSize * 11,\n          (bottomRowPosition - 0.04) * animationHeight + boxSize * 1.5,\n        ],\n      },\n      {\n        position: [\n          step3.text.items[0].position[0] + boxSize * 11.5,\n          (bottomRowPosition - 0.04) * animationHeight + boxSize * 1.5,\n        ],\n      },\n    ],\n  },\n  ilVal: {\n    ...step3.ilVal,\n    items: [\n      {\n        position: [\n          step3.text.items[0].position[0] + boxSize * 8,\n          (bottomRowPosition - 0.04) * animationHeight + boxSize,\n        ],\n      },\n      {\n        name: `V`,\n        namePosition: 'top',\n        position: [\n          step3.text.items[0].position[0] + boxSize * 8.5,\n          (bottomRowPosition - 0.04) * animationHeight + boxSize,\n        ],\n      },\n      {\n        position: [\n          step3.text.items[0].position[0] + boxSize * 9,\n          (bottomRowPosition - 0.04) * animationHeight + boxSize,\n        ],\n      },\n      {\n        position: [\n          step3.text.items[0].position[0] + boxSize * 8,\n          (bottomRowPosition - 0.04) * animationHeight + boxSize * 1.5,\n        ],\n      },\n      {\n        position: [\n          step3.text.items[0].position[0] + boxSize * 8.5,\n          (bottomRowPosition - 0.04) * animationHeight + boxSize * 1.5,\n        ],\n      },\n      {\n        position: [\n          step3.text.items[0].position[0] + boxSize * 9,\n          (bottomRowPosition - 0.04) * animationHeight + boxSize * 1.5,\n        ],\n      },\n    ],\n  },\n  queVal: {\n    ...step3.queVal,\n    items: [\n      {\n        position: [\n          step3.text.items[0].position[0] + boxSize * 3.5,\n          (bottomRowPosition - 0.08) * animationHeight + boxSize,\n        ],\n      },\n      {\n        name: `Q`,\n        namePosition: 'top',\n        position: [\n          step3.text.items[0].position[0] + boxSize * 4,\n          (bottomRowPosition - 0.08) * animationHeight + boxSize,\n        ],\n      },\n      {\n        position: [\n          step3.text.items[0].position[0] + boxSize * 4.5,\n          (bottomRowPosition - 0.08) * animationHeight + boxSize,\n        ],\n      },\n      {\n        position: [\n          step3.text.items[0].position[0] + boxSize * 3.5,\n          (bottomRowPosition - 0.08) * animationHeight + boxSize * 1.5,\n        ],\n      },\n      {\n        position: [\n          step3.text.items[0].position[0] + boxSize * 4,\n          (bottomRowPosition - 0.08) * animationHeight + boxSize * 1.5,\n        ],\n      },\n      {\n        position: [\n          step3.text.items[0].position[0] + boxSize * 4.5,\n          (bottomRowPosition - 0.08) * animationHeight + boxSize * 1.5,\n        ],\n      },\n    ],\n  },\n  keyVal: {\n    ...step3.keyVal,\n    items: [\n      {\n        name: `K^T`,\n        namePosition: 'top',\n        position: [\n          step3.text.items[0].position[0] + boxSize * 6,\n          (bottomRowPosition - 0.06) * animationHeight + boxSize * 0.5,\n        ],\n      },\n      {\n        position: [\n          step3.text.items[0].position[0] + boxSize * 6.5,\n          (bottomRowPosition - 0.06) * animationHeight + boxSize * 0.5,\n        ],\n      },\n      {\n        position: [\n          step3.text.items[0].position[0] + boxSize * 6,\n          (bottomRowPosition - 0.06) * animationHeight + boxSize,\n        ],\n      },\n      {\n        position: [\n          step3.text.items[0].position[0] + boxSize * 6.5,\n          (bottomRowPosition - 0.06) * animationHeight + boxSize,\n        ],\n      },\n      {\n        position: [\n          step3.text.items[0].position[0] + boxSize * 6,\n          (bottomRowPosition - 0.06) * animationHeight + boxSize * 1.5,\n        ],\n      },\n      {\n        position: [\n          step3.text.items[0].position[0] + boxSize * 6.5,\n          (bottomRowPosition - 0.06) * animationHeight + boxSize * 1.5,\n        ],\n      },\n    ],\n  },\n  text: {\n    ...step3.text,\n    items: [\n      ...step3.text.items,\n      {\n        id: 'softmax',\n        val: `<span style=\"font-size: 24px\">softmax</span>`,\n        sizeX: `100px`,\n        sizeY: `25px`,\n        borderColor: 'transparent',\n        position: [\n          step3.text.items[0].position[0] + boxSize / 2,\n          (bottomRowPosition - 0.06) * animationHeight + boxSize * 1.5,\n        ],\n      },\n      {\n        id: 'left-bracket',\n        val: `<span style=\"font-size: 100px\">(</span>`,\n        sizeX: `20px`,\n        sizeY: `100px`,\n        borderColor: 'transparent',\n        position: [\n          step3.text.items[0].position[0] + boxSize * 2.75,\n          (bottomRowPosition - 0.06) * animationHeight + boxSize * 0.5,\n        ],\n      },\n      {\n        id: 'right-bracket',\n        val: `<span style=\"font-size: 100px\">)</span>`,\n        sizeX: `20px`,\n        sizeY: `100px`,\n        borderColor: 'transparent',\n        position: [\n          step3.text.items[0].position[0] + boxSize * 7.25,\n          (bottomRowPosition - 0.06) * animationHeight + boxSize * 0.5,\n        ],\n      },\n      {\n        id: 'divider-bracket',\n        val: `<div style=\" width: 100%;\"><div style=\"text-align: center; font-size: 20px; padding-top: 10px; width: 100%; border-top: 5px solid black;\">${katex.renderToString(\n          '\\\\sqrt{d_k}'\n        )}</div></div>`,\n        sizeX: `180px`,\n        sizeY: `38px`,\n        borderColor: 'transparent',\n        position: [\n          step3.text.items[0].position[0] + boxSize * 3.35,\n          (bottomRowPosition - 0.06) * animationHeight + boxSize * 2.25,\n        ],\n      },\n      {\n        id: 'equal',\n        val: `<span style=\"font-size: 36px\">=</span>`,\n        sizeX: `30px`,\n        sizeY: `25px`,\n        borderColor: 'transparent',\n        position: [\n          step3.text.items[0].position[0] + boxSize * 9.75,\n          (bottomRowPosition - 0.06) * animationHeight + boxSize * 1.5,\n        ],\n      },\n      {\n        id: 'title',\n        val: `<span style=\"white-space: nowrap; font-size: 18px; text-align: left; width: 600px;\">Self-attention calculation in matrix form, Source: Illustrated Transformer</span>`,\n        sizeX: `600px`,\n        sizeY: `25px`,\n        borderColor: 'transparent',\n        position: [\n          step3.text.items[0].position[0] + boxSize / 2,\n          (bottomRowPosition - 0.12) * animationHeight,\n        ],\n      },\n    ],\n  },\n};\n\nconst steps = {\n  step1,\n  step2,\n  step3,\n  step4,\n};\n\nexport { steps, animationWidth, animationHeight };\n","// @flow\nimport React, { useState } from 'react';\nimport DiagramGenerator from '../../DiagramGenerator/DiagramGenerator';\nimport ProcessControls from '../../DiagramGenerator/ProcessControls';\n\nimport { steps, animationWidth, animationHeight } from './data';\n\nimport styles from './AttentionLayer.module.scss';\n\nconst AttentionLayer = () => {\n  const [step, setStep] = useState(1);\n\n  const onStepForward = () => {\n    setStep(step + 1);\n  };\n\n  const onStepBackward = () => {\n    setStep(step - 1);\n  };\n\n  const currStep = steps[`step${step}`];\n\n  return (\n    <div className={styles['attention-continaer']}>\n      <DiagramGenerator\n        data={currStep}\n        step={step}\n        animationHeight={animationHeight}\n        animationWidth={animationWidth}\n        id=\"attention-layer-diagram\"\n      />\n      <ProcessControls\n        onStepForward={onStepForward}\n        onStepBackward={onStepBackward}\n        prevDisabled={step < 2}\n        nextDisabled={step === Object.keys(steps).length}\n      />\n    </div>\n  );\n};\n\nexport default AttentionLayer;\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/components/Detector/Detector.js","webpack:///./src/pages/object-detection.js","webpack:///./src/components/Detector/loading.gif","webpack:///./src/utils/get-prediction.worker.js","webpack:///./node_modules/workerize-loader/dist/rpc-wrapper.js"],"names":["videoConstraints","facingMode","useStyles","makeStyles","theme","container","position","maxWidth","width","video","zIndex","canvas","toggler","marginBottom","spacing","noModelMessage","display","flexDirection","justifyContent","alignItems","drawBoxWithLabel","box","ctx","x","bbox","y","height","font","strokeStyle","lineWidth","strokeRect","textBaseline","fillStyle","textWidth","measureText","class","textHeight","parseInt","fillRect","fillText","detector","Worker","wwDetector","document","createElement","Detector","classes","useState","hasWebcam","setHasWebcam","shouldDetect","setShouldDetect","modelLoaded","setModelLoaded","webcamRef","useRef","canvasRef","predict","stopDetection","a","current","videoWidth","videoHeight","tempCtx","getContext","drawImage","imageData","getImageData","getPrediction","result","useEffect","navigator","mediaDevices","getUserMedia","audio","then","stream","window","srcObject","Promise","resolve","onloadedmetadata","predictionResults","clearRect","forEach","catch","e","console","error","Fragment","className","src","icon","alt","Button","onClick","margin","fullWidth","variant","type","color","autoPlay","playsInline","muted","ref","ObjectDetection","useSiteMetadata","title","subtitle","Layout","description","Sidebar","Page","module","exports","addMethods","require","methods","w","__webpack_public_path__","name","worker","c","callbacks","addEventListener","d","data","id","f","Object","assign","Error","message","evt","createEvent","initEvent","method","params","dispatchEvent","len","arguments","length","b","postMessage"],"mappings":"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","file":"component---src-pages-object-detection-js-7543e4659dbd966e1e9a.js","sourcesContent":["// @flow\nimport React, { useRef, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport * as wwDetector from '../../utils/get-prediction.worker.js';\nimport icon from './loading.gif';\n\nconst videoConstraints = {\n  facingMode: 'environment',\n};\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    position: 'relative',\n    maxWidth: '100%',\n    width: '100%',\n  },\n  video: {\n    // visibility: 'hidden',\n    zIndex: -1,\n    maxWidth: '100%',\n    position: 'absolute',\n  },\n  canvas: {\n    // visibility: 'hidden',\n    maxWidth: '100%',\n    position: 'absolute',\n  },\n  toggler: {\n    marginBottom: theme.spacing(2),\n  },\n  noModelMessage: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nfunction drawBoxWithLabel(box, ctx) {\n  const x = box.bbox[0];\n  const y = box.bbox[1];\n  const width = box.bbox[2];\n  const height = box.bbox[3];\n  const font = '16px sans-serif';\n\n  ctx.strokeStyle = 'green';\n  ctx.lineWidth = 4;\n  ctx.strokeRect(x, y, width, height);\n\n  ctx.font = font;\n  ctx.textBaseline = 'top';\n  ctx.fillStyle = 'green';\n  const textWidth = ctx.measureText(box.class).width;\n  const textHeight = parseInt(font, 10); // base 10\n  ctx.fillRect(x, y, textWidth + 4, textHeight + 4);\n\n  // Draw the text last to ensure it's on top.\n  ctx.fillStyle = '#FFFFFF';\n  ctx.fillText(box.class, x, y);\n}\n\nlet detector = null;\nif (typeof Worker !== `undefined`) {\n  detector = wwDetector();\n}\n\nlet canvas = null;\nif (typeof document !== `undefined`) {\n  canvas = document.createElement('canvas');\n}\n\nconst Detector = () => {\n  const classes = useStyles();\n  const [hasWebcam, setHasWebcam] = useState(true);\n  const [shouldDetect, setShouldDetect] = useState(true);\n  const [modelLoaded, setModelLoaded] = useState(false);\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  const predict = async stopDetection => {\n    const video = webcamRef.current;\n    if (stopDetection || video.videoWidth === 0 || video.videoHeight === 0) {\n      return null;\n    }\n\n    // Set canvas to be the same height as video input\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n\n    const tempCtx = canvas.getContext('2d');\n    // get canvas context and draw video onto it\n    tempCtx.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n    // // ctx.scale(224 / width, 224 / width);\n\n    // extract ImageData objct because you cannot send HTMLElements to Web Worker\n    const imageData = tempCtx.getImageData(\n      0,\n      0,\n      video.videoWidth,\n      video.videoHeight\n    );\n    const result = await detector.getPrediction(imageData);\n    return {\n      ...result,\n      width: video.videoWidth,\n      height: video.videoHeight,\n    };\n  };\n\n  const toggleDetection = () => {\n    setShouldDetect(!shouldDetect);\n  };\n\n  useEffect(() => {\n    let stopDetection = !shouldDetect;\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices\n        .getUserMedia({\n          audio: false,\n          video: videoConstraints,\n        })\n        .then(stream => {\n          window.stream = stream;\n          webcamRef.current.srcObject = stream;\n          return new Promise(resolve => {\n            webcamRef.current.onloadedmetadata = () => {\n              resolve();\n            };\n          });\n        })\n        .then(async () => {\n          while (!stopDetection) {\n            // We need await in while loop because we don't want to skip detections\n            // eslint-disable-next-line no-await-in-loop\n            const predictionResults = await predict(stopDetection);\n\n            // Set width and height for the first render\n            if (!canvasRef) {\n              return false;\n            }\n            if (canvasRef.current.width !== predictionResults.width) {\n              canvasRef.current.width = predictionResults.width;\n            }\n            if (canvasRef.current.height !== predictionResults.height) {\n              canvasRef.current.height = predictionResults.height;\n            }\n            if (!modelLoaded && predictionResults != null) {\n              setModelLoaded(true);\n            }\n            const ctx = canvasRef.current.getContext('2d');\n            if (\n              predictionResults &&\n              predictionResults.result != null &&\n              predictionResults.result[0]\n            ) {\n              // Clear canvas before drawing\n              ctx.clearRect(\n                0,\n                0,\n                canvasRef.current.width,\n                canvasRef.current.height\n              );\n              predictionResults.result.forEach(box => {\n                drawBoxWithLabel(box, ctx);\n              });\n            }\n          }\n          return true;\n        })\n        .catch(e => {\n          console.error(e);\n        });\n    } else {\n      setHasWebcam(false);\n    }\n\n    return () => {\n      stopDetection = true;\n    };\n  }, [webcamRef, shouldDetect]);\n\n  return (\n    <React.Fragment>\n      {!modelLoaded && (\n        <h2 className={classes.noModelMessage}>\n          Give it a moment, model has to be loaded first (~5MB)\n          <img src={icon} alt={': ('} />\n        </h2>\n      )}\n      <Button\n        className={classes.toggler}\n        onClick={toggleDetection}\n        margin=\"normal\"\n        fullWidth\n        variant=\"contained\"\n        type=\"submit\"\n        color=\"primary\"\n      >\n        {shouldDetect ? 'Turn OFF' : 'Turn ON'}\n      </Button>\n      {!hasWebcam && <span>Cannot access webcam :(</span>}\n      <div className={classes.container}>\n        <video\n          className={classes.video}\n          autoPlay\n          playsInline\n          muted\n          ref={webcamRef}\n        />\n        <canvas className={classes.canvas} ref={canvasRef} />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Detector;\n","// @flow\nimport React from 'react';\nimport Sidebar from '../components/Sidebar';\nimport Layout from '../components/Layout';\nimport Page from '../components/Page';\nimport Detector from '../components/Detector';\nimport { useSiteMetadata } from '../hooks';\n\nconst ObjectDetection = () => {\n  const { title, subtitle } = useSiteMetadata();\n\n  return (\n    <Layout title={`Object Detection TF2 - ${title}`} description={subtitle}>\n      <Sidebar />\n      <Page title=\"Simple Detector\">\n        <Detector />\n      </Page>\n    </Layout>\n  );\n};\n\nexport default ObjectDetection;\n","module.exports = __webpack_public_path__ + \"static/loading-323d8b7d3d7937404db8f570a40e63c2.gif\";","\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"getPrediction\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"b65b17852393eddd3c07.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","require(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nfunction addMethods(worker, methods) {\n  var c = 0;\n  var callbacks = {};\n  worker.addEventListener('message', function (e) {\n    var d = e.data;\n\n    if (d.type !== 'RPC') {\n      return;\n    }\n\n    if (d.id) {\n      var f = callbacks[d.id];\n\n      if (f) {\n        delete callbacks[d.id];\n\n        if (d.error) {\n          f[1](Object.assign(Error(d.error.message), d.error));\n        } else {\n          f[0](d.result);\n        }\n      }\n    } else {\n      var evt = document.createEvent('Event');\n      evt.initEvent(d.method, false, false);\n      evt.data = d.params;\n      worker.dispatchEvent(evt);\n    }\n  });\n  methods.forEach(function (method) {\n    worker[method] = function () {\n      var params = [],\n          len = arguments.length;\n\n      while (len--) {\n        params[len] = arguments[len];\n      }\n\n      return new Promise(function (a, b) {\n        var id = ++c;\n        callbacks[id] = [a, b];\n        worker.postMessage({\n          type: 'RPC',\n          id: id,\n          method: method,\n          params: params\n        });\n      });\n    };\n  });\n}\n\nmodule.exports = addMethods;"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/components/Diagrams/RNNProcess/RNNProcess.module.scss","webpack:///./src/pages/diagrams/rnn-diagram.js","webpack:///./src/components/Page/Page.module.scss","webpack:///./src/components/Page/Page.js","webpack:///./src/components/Diagrams/RNNProcess/data.js","webpack:///./src/components/Diagrams/RNNProcess/RNNProcess.js"],"names":["module","exports","CustomPageComponent","useSiteMetadata","title","subtitle","description","displayCookie","wide","Page","children","pageRef","useRef","useEffect","current","scrollIntoView","sidebarClass","styles","ref","className","step1","inputs","color","borderColor","size","boxSize","blockName","blockType","items","id","val","name","position","firstRowPosition","bottomRowPosition","hidden","state","context","output","text","sizeX","sizeY","step2","tooltipValue","lines","from","to","step3","step4","step5","step6","orientation","step7","step8","namePosition","step9","step10","steps","step11","RNNProcess","useState","step","setStep","currStep","DiagramGenerator","data","animationHeight","animationWidth","ProcessControls","onStepForward","onStepBackward","prevDisabled","nextDisabled","Object","keys","length"],"mappings":"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","file":"component---src-pages-diagrams-rnn-diagram-js-7ab99efe7a4c50d5fa87.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rnn-continaer\":\"RNNProcess-module--rnn-continaer--1ES6Y\"};","// @flow\nimport React from 'react';\nimport Layout from '../../components/Layout';\nimport Page from '../../components/Page';\nimport { useSiteMetadata } from '../../hooks';\nimport RNNProcess from '../../components/Diagrams/RNNProcess/RNNProcess';\n\nconst CustomPageComponent = () => {\n  const { title, subtitle } = useSiteMetadata();\n\n  return (\n    <Layout\n      title={`RNN Process Diagram - ${title}`}\n      description={subtitle}\n      displayCookie={false}\n    >\n      <Page title=\"Sequence-to-Sequence translation using RNNs\" wide={true}>\n        <RNNProcess />\n      </Page>\n    </Layout>\n  );\n};\n\nexport default CustomPageComponent;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Page-module--page--2nMky\",\"page--wide\":\"Page-module--page--wide--34SE4\",\"page__inner\":\"Page-module--page__inner--2M_vz\",\"page__title\":\"Page-module--page__title--GPD8L\",\"page__body\":\"Page-module--page__body--Ic6i6\"};","import React, { useRef, useEffect } from 'react';\nimport styles from './Page.module.scss';\n\ntype Props = {\n  title?: string,\n  wide?: boolean,\n  children: React.Node,\n};\n\nconst Page = ({ title, wide, children }: Props) => {\n  const pageRef = useRef();\n\n  useEffect(() => {\n    pageRef.current.scrollIntoView();\n  });\n\n  const sidebarClass = wide\n    ? styles['page'] + ' ' + styles['page--wide']\n    : styles['page'];\n\n  return (\n    <div ref={pageRef} className={sidebarClass}>\n      <div className={styles['page__inner']}>\n        {title && <h1 className={styles['page__title']}>{title}</h1>}\n        <div className={styles['page__body']}>{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Page;\n","import React from 'react';\n\nconst firstRowPosition = 0.01;\nconst boxPadding = 0.07;\nconst bottomRowPosition = 0.8;\nconst topRowPosition = 0.1;\nconst animationWidth = 1200;\nconst animationHeight = 500;\nconst boxSize = 50;\nconst step1 = {\n  inputs: {\n    color: '#FFD199',\n    borderColor: '#A35A00',\n    size: `${boxSize}px`,\n    blockName: 'inputs',\n    blockType: 'rect',\n    items: [\n      {\n        id: 'x1',\n        val: `<span>\n          x<sub>1</sub>\n        </span>`,\n        name: 'We',\n        position: [\n          firstRowPosition * animationWidth,\n          bottomRowPosition * animationHeight,\n        ],\n      },\n      {\n        id: 'x2',\n        val: `<span>\n          x<sub>2</sub>\n        </span>`,\n        name: 'are',\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth,\n          bottomRowPosition * animationHeight,\n        ],\n      },\n      {\n        id: 'x3',\n        val: `<span>\n          x<sub>3</sub>\n        </span>`,\n        name: 'learning',\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 2,\n          bottomRowPosition * animationHeight,\n        ],\n      },\n      {\n        id: 'x4',\n        val: `<span>\n          x<sub>4</sub>\n        </span>`,\n        name: 'attention',\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3,\n          bottomRowPosition * animationHeight,\n        ],\n      },\n    ],\n  },\n  hidden: {\n    color: '#9BF6FF',\n    borderColor: '#00838F',\n    size: `${boxSize}px`,\n    blockName: 'hidden',\n    blockType: 'rect',\n    items: [],\n  },\n  state: {\n    color: '#FDFFB6',\n    borderColor: '#636600',\n    size: `${boxSize}px`,\n    blockName: 'state',\n    blockType: 'rect',\n    items: [],\n  },\n  context: {\n    color: '#FFADAD',\n    borderColor: '#660000',\n    size: `${boxSize}px`,\n    blockName: 'context',\n    blockType: 'rect',\n    items: [],\n  },\n  output: {\n    color: '#CAFFBF',\n    borderColor: '#147A00',\n    size: `${boxSize}px`,\n    blockName: 'output',\n    blockType: 'rect',\n    items: [],\n  },\n  text: {\n    color: '#CAFFBF',\n    borderColor: '#333',\n    sizeX: `300px`,\n    sizeY: `50px`,\n    blockName: 'text',\n    blockType: 'text',\n    items: [\n      {\n        id: 'textBlock1',\n        val: `<span>\n          <strong>Input</strong>: Sequence x<sub>1</sub>, …, x<sub>T</sub>\n        </span>`,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth,\n          (topRowPosition + 0.2) * animationHeight,\n        ],\n      },\n    ],\n  },\n};\n\nconst step2 = {\n  ...step1,\n  hidden: {\n    ...step1.hidden,\n    items: [\n      {\n        id: 'h1',\n        val: `<span>\n          h<sub>1</sub>\n        </span>`,\n        tooltipValue: `<span>\n          h<sub>t</sub> = f<sub>W</sub>(x<sub>t</sub>, h<sub>t-1</sub>)\n        </span>`,\n        position: [\n          firstRowPosition * animationWidth,\n          (bottomRowPosition - 0.2) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step1.inputs.items[0].position[0] + boxSize / 2,\n              step1.inputs.items[0].position[1],\n            ],\n            to: [\n              firstRowPosition * animationWidth + boxSize / 2,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n};\n\nconst step3 = {\n  ...step2,\n  hidden: {\n    ...step2.hidden,\n    items: [\n      ...step2.hidden.items,\n      {\n        id: 'h2',\n        val: `<span>\n          h<sub>2</sub>\n        </span>`,\n        tooltipValue: `<span>\n          h<sub>t</sub> = f<sub>W</sub>(x<sub>t</sub>, h<sub>t-1</sub>)\n        </span>`,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth,\n          (bottomRowPosition - 0.2) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step2.inputs.items[1].position[0] + boxSize / 2,\n              step2.inputs.items[1].position[1],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth + boxSize / 2,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n          },\n          {\n            from: [\n              step2.hidden.items[0].position[0] + boxSize,\n              step2.hidden.items[0].position[1] + boxSize / 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize / 2,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n};\n\nconst step4 = {\n  ...step3,\n  hidden: {\n    ...step3.hidden,\n    items: [\n      ...step3.hidden.items,\n      {\n        id: 'h3',\n        val: `<span>\n          h<sub>3</sub>\n        </span>`,\n        tooltipValue: `<span>\n          h<sub>t</sub> = f<sub>W</sub>(x<sub>t</sub>, h<sub>t-1</sub>)\n        </span>`,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 2,\n          (bottomRowPosition - 0.2) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step3.inputs.items[2].position[0] + boxSize / 2,\n              step3.inputs.items[2].position[1],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 2 +\n                boxSize / 2,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n          },\n          {\n            from: [\n              step3.hidden.items[1].position[0] + boxSize,\n              step3.hidden.items[1].position[1] + boxSize / 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 2,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize / 2,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n};\n\nconst step5 = {\n  ...step4,\n  hidden: {\n    ...step4.hidden,\n    items: [\n      ...step4.hidden.items,\n      {\n        id: 'h4',\n        val: `<span>\n          h<sub>4</sub>\n        </span>`,\n        tooltipValue: `<span>\n          h<sub>t</sub> = f<sub>W</sub>(x<sub>t</sub>, h<sub>t-1</sub>)\n        </span>`,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3,\n          (bottomRowPosition - 0.2) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step4.inputs.items[3].position[0] + boxSize / 2,\n              step4.inputs.items[3].position[1],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                boxSize / 2,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n          },\n          {\n            from: [\n              step4.hidden.items[2].position[0] + boxSize,\n              step4.hidden.items[2].position[1] + boxSize / 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize / 2,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n};\n\nconst step6 = {\n  ...step5,\n  state: {\n    ...step5.state,\n    items: [\n      ...step5.state.items,\n      {\n        id: 's0',\n        val: `<span>\n          s<sub>0</sub>\n        </span>`,\n        tooltipValue: `\n          <span>\n          <strong>Initial decoder state</strong>\n          </span>\n        `,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 5,\n          (bottomRowPosition - 0.2) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step5.hidden.items[3].position[0] + boxSize,\n              step5.hidden.items[3].position[1] + boxSize / 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 5,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize / 2,\n            ],\n            orientation: 'horizontal',\n          },\n        ],\n      },\n    ],\n  },\n  context: {\n    ...step5.context,\n    items: [\n      ...step5.context.items,\n      {\n        id: 'c',\n        val: `<span>\n          c\n        </span>`,\n        tooltipValue: `\n          <span>\n           <strong>Context vector</strong><br/>\n           c = h<sub>T</sub> (usually)\n          </span>\n        `,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 5,\n          bottomRowPosition * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step5.hidden.items[3].position[0] + boxSize,\n              step5.hidden.items[3].position[1] + boxSize / 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 5,\n              bottomRowPosition * animationHeight + boxSize / 2,\n            ],\n            orientation: 'horizontal',\n          },\n        ],\n      },\n    ],\n  },\n};\n\nconst step7 = {\n  ...step6,\n  text: {\n    color: '#CAFFBF',\n    borderColor: '#333',\n    sizeX: `300px`,\n    sizeY: `100px`,\n    blockName: 'text',\n    blockType: 'text',\n    items: [\n      {\n        id: 'textBlock1',\n        val: `<span>\n          <strong>Input</strong>: Sequence x<sub>1</sub>, …, x<sub>T</sub><br/>\n          <strong>Output</strong>: Sequence y<sub>1</sub>, …, y<sub>T'</sub>\n        </span>`,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth,\n          (topRowPosition + 0.2) * animationHeight,\n        ],\n      },\n    ],\n  },\n  state: {\n    ...step6.state,\n    items: [\n      ...step6.state.items,\n      {\n        id: 's1',\n        val: `<span>\n          s<sub>1</sub>\n        </span>`,\n        tooltipValue: `\n          <span>\n           s<sub>t</sub> = g<sub>U</sub>(y<sub>t-1</sub>, h<sub>t-1</sub>, c)\n          </span>\n        `,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 7,\n          (bottomRowPosition - 0.2) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step6.state.items[0].position[0] + boxSize,\n              step6.state.items[0].position[1] + boxSize / 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 7,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize / 2,\n            ],\n            orientation: 'horizontal',\n          },\n          {\n            from: [\n              step6.context.items[0].position[0] + boxSize,\n              step6.context.items[0].position[1] + boxSize / 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 7 +\n                boxSize / 6,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n            // orientation: 'horizontal',\n          },\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 7 +\n                boxSize / 2,\n              bottomRowPosition * animationHeight,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 7 +\n                boxSize / 2,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  output: {\n    ...step6.output,\n    items: [\n      ...step6.output.items,\n      {\n        id: 'y0',\n        val: `<span>\n          y<sub>0</sub>\n        </span>`,\n        name: '[START]',\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 7,\n          bottomRowPosition * animationHeight,\n        ],\n      },\n    ],\n  },\n};\n\nconst step8 = {\n  ...step7,\n  output: {\n    ...step7.output,\n    items: [\n      ...step7.output.items,\n      {\n        id: 'y1-o',\n        val: `<span>\n          y<sub>1</sub>\n        </span>`,\n        name: 'uczymy',\n        namePosition: 'top',\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 7,\n          (bottomRowPosition - 0.4) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step7.state.items[1].position[0] + boxSize / 2,\n              step7.state.items[1].position[1],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 7 +\n                boxSize / 2,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n};\n\nconst step9 = {\n  ...step8,\n  state: {\n    ...step8.state,\n    items: [\n      ...step8.state.items,\n      {\n        id: 's2',\n        val: `<span>\n          s<sub>2</sub>\n        </span>`,\n        tooltipValue: `\n          <span>\n           s<sub>t</sub> = g<sub>U</sub>(y<sub>t-1</sub>, h<sub>t-1</sub>, c)\n          </span>\n        `,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 8,\n          (bottomRowPosition - 0.2) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step8.state.items[1].position[0] + boxSize,\n              step8.state.items[1].position[1] + boxSize / 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 8,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize / 2,\n            ],\n            orientation: 'horizontal',\n          },\n          {\n            from: [\n              step8.context.items[0].position[0] + boxSize,\n              step8.context.items[0].position[1] + boxSize / 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 8 +\n                boxSize / 6,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n            // orientation: 'horizontal',\n          },\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 8 +\n                boxSize / 2,\n              bottomRowPosition * animationHeight,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 8 +\n                boxSize / 2,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  output: {\n    ...step8.output,\n    items: [\n      ...step8.output.items,\n      {\n        id: 'y1',\n        val: `<span>\n          y<sub>1</sub>\n        </span>`,\n        name: 'uczymy',\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 8,\n          bottomRowPosition * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step8.output.items[1].position[0] + boxSize,\n              step8.output.items[1].position[1] + boxSize,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 8,\n              bottomRowPosition * animationHeight + boxSize / 2,\n            ],\n            orientation: 'horizontal',\n          },\n        ],\n      },\n      {\n        id: 'y2-o',\n        val: `<span>\n          y<sub>2</sub>\n        </span>`,\n        name: 'się',\n        namePosition: 'top',\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 8,\n          (bottomRowPosition - 0.4) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 8 +\n                boxSize / 2,\n              (bottomRowPosition - 0.2) * animationHeight,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 8 +\n                boxSize / 2,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n};\n\nconst step10 = {\n  ...step9,\n  state: {\n    ...step9.state,\n    items: [\n      ...step9.state.items,\n      {\n        id: 's3',\n        val: `<span>\n          s<sub>3</sub>\n        </span>`,\n        tooltipValue: `\n          <span>\n           s<sub>t</sub> = g<sub>U</sub>(y<sub>t-1</sub>, h<sub>t-1</sub>, c)\n          </span>\n        `,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 9,\n          (bottomRowPosition - 0.2) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step9.state.items[2].position[0] + boxSize,\n              step9.state.items[2].position[1] + boxSize / 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 9,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize / 2,\n            ],\n            orientation: 'horizontal',\n          },\n          {\n            from: [\n              step9.context.items[0].position[0] + boxSize,\n              step9.context.items[0].position[1] + boxSize / 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 9 +\n                boxSize / 6,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n            // orientation: 'horizontal',\n          },\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 9 +\n                boxSize / 2,\n              bottomRowPosition * animationHeight,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 9 +\n                boxSize / 2,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  output: {\n    ...step9.output,\n    items: [\n      ...step9.output.items,\n      {\n        id: 'y2',\n        val: `<span>\n          y<sub>2</sub>\n        </span>`,\n        name: 'się',\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 9,\n          bottomRowPosition * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step9.output.items[3].position[0] + boxSize,\n              step9.output.items[3].position[1] + boxSize,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 9,\n              bottomRowPosition * animationHeight + boxSize / 2,\n            ],\n            orientation: 'horizontal',\n          },\n        ],\n      },\n      {\n        id: 'y3-o',\n        val: `<span>\n          y<sub>3</sub>\n        </span>`,\n        name: 'uwagi',\n        namePosition: 'top',\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 9,\n          (bottomRowPosition - 0.4) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 9 +\n                boxSize / 2,\n              (bottomRowPosition - 0.2) * animationHeight,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 9 +\n                boxSize / 2,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n};\n\nconst step11 = {\n  ...step10,\n  state: {\n    ...step10.state,\n    items: [\n      ...step10.state.items,\n      {\n        id: 's4',\n        val: `<span>\n          s<sub>4</sub>\n        </span>`,\n        tooltipValue: `\n          <span>\n           s<sub>t</sub> = g<sub>U</sub>(y<sub>t-1</sub>, h<sub>t-1</sub>, c)\n          </span>\n        `,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 10,\n          (bottomRowPosition - 0.2) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step10.state.items[3].position[0] + boxSize,\n              step10.state.items[3].position[1] + boxSize / 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 10,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize / 2,\n            ],\n            orientation: 'horizontal',\n          },\n          {\n            from: [\n              step10.context.items[0].position[0] + boxSize,\n              step10.context.items[0].position[1] + boxSize / 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 10 +\n                boxSize / 6,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n            // orientation: 'horizontal',\n          },\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 10 +\n                boxSize / 2,\n              bottomRowPosition * animationHeight,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 10 +\n                boxSize / 2,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  output: {\n    ...step10.output,\n    items: [\n      ...step10.output.items,\n      {\n        id: 'y3',\n        val: `<span>\n          y<sub>3</sub>\n        </span>`,\n        name: 'uwagi',\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 10,\n          bottomRowPosition * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step10.output.items[5].position[0] + boxSize,\n              step10.output.items[5].position[1] + boxSize,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 10,\n              bottomRowPosition * animationHeight + boxSize / 2,\n            ],\n            orientation: 'horizontal',\n          },\n        ],\n      },\n      {\n        id: 'y4-o',\n        val: `<span>\n          y<sub>4</sub>\n        </span>`,\n        name: '[STOP]',\n        namePosition: 'top',\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 10,\n          (bottomRowPosition - 0.4) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 10 +\n                boxSize / 2,\n              (bottomRowPosition - 0.2) * animationHeight,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 10 +\n                boxSize / 2,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n};\n\nconst steps = {\n  step1,\n  step2,\n  step3,\n  step4,\n  step5,\n  step6,\n  step7,\n  step8,\n  step9,\n  step10,\n  step11,\n};\n\nexport { steps, animationWidth, animationHeight };\n","// @flow\nimport React, { useEffect, useState, useReducer } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Button from '@material-ui/core/Button';\nimport DiagramGenerator from '../../DiagramGenerator/DiagramGenerator';\nimport ProcessControls from '../../DiagramGenerator/ProcessControls';\nimport { steps, animationWidth, animationHeight } from './data';\n\nimport styles from './RNNProcess.module.scss';\n\nconst RNNProcess = () => {\n  const [step, setStep] = useState(1);\n\n  const onStepForward = () => {\n    setStep(step + 1);\n  };\n\n  const onStepBackward = () => {\n    setStep(step - 1);\n  };\n\n  const currStep = steps[`step${step}`];\n\n  return (\n    <div className={styles['rnn-continaer']}>\n      <DiagramGenerator\n        data={currStep}\n        step={step}\n        animationHeight={animationHeight}\n        animationWidth={animationWidth}\n      />\n      <ProcessControls\n        onStepForward={onStepForward}\n        onStepBackward={onStepBackward}\n        prevDisabled={step < 2}\n        nextDisabled={step === Object.keys(steps).length}\n      />\n    </div>\n  );\n};\n\nexport default RNNProcess;\n"],"sourceRoot":""}
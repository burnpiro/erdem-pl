{"version":3,"sources":["webpack:///./src/components/Diagrams/RNNWithAttention/data.js","webpack:///./src/components/Diagrams/RNNWithAttention/RNNWithAttention.js","webpack:///./src/components/Diagrams/RNNWithAttention/RNNWithAttention.module.scss"],"names":["alignmentScoreText","hiddentStateText","contextText","stateText","step1","inputs","color","borderColor","size","boxSize","blockName","blockType","items","id","val","name","position","firstRowPosition","bottomRowPosition","attention","hidden","tooltipValue","lines","from","to","state","orientation","context","output","text","sizeX","sizeY","softmax","operations","circleR","step2","points","step3","step4","boxPadding","step5","step6","step7","step8","step9","namePosition","step10","step11","step12","step13","step14","step15","step16","step17","steps","step18","RNNWithAttention","useState","step","setStep","currStep","className","styles","DiagramGenerator","data","animationHeight","animationWidth","ProcessControls","onStepForward","onStepBackward","prevDisabled","nextDisabled","Object","keys","length","module","exports"],"mappings":"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","file":"d2748fff3a31096fc3a2024c73a7f219f2232c61-f2caa33d515ca2454111.js","sourcesContent":["import React from 'react';\n\nconst firstRowPosition = 0.01;\nconst boxPadding = 0.07;\nconst bottomRowPosition = 0.8;\nconst topRowPosition = 0.1;\nconst animationWidth = 1200;\nconst animationHeight = 500;\nconst boxSize = 50;\nconst circleR = 16;\n\nconst alignmentScoreText = `<span>\ne<sub>t,i</sub> = f<sub>att</sub>(s<sub>t-1</sub>, h<sub>i</sub>)\n</span>\n`;\nconst hiddentStateText = `<span>\nh<sub>t</sub> = f<sub>W</sub>(x<sub>t</sub>, h<sub>t-1</sub>)\n</span>`;\n\nconst contextText = `<span>\nc<sub>t</sub> = <span style=\"font-size: 26px\">∑<sub>i</sub></span> a<sub>t,i</sub>h<sub>i</sub>\n</span>`;\n\nconst stateText = `<span>\ns<sub>t</sub> = g<sub>U</sub>(y<sub>t-1</sub>, s<sub>t-1</sub>, c<sub>t</sub>)\n</span>`;\n\nconst alignScoresText = `<span>\n<strong>Alignment scores</strong><br/>\ne<sub>t,i</sub> = f<sub>att</sub>(s<sub>t-1</sub>, h<sub>i</sub>) [scalar]<br/>\nf<sub>att</sub> is a MLP\n</span>\n`;\nconst alignScoresTextShort = `<span>\n<strong>Alignment scores</strong>\n</span>\n`;\nconst attentionWeightsText = `<span>\n<strong>Attention weights</strong><br/>\n<span style=\"font-size: 14px\" >Normalized alignment socres with softmax funtion</span><br/>\n0 < a<sub>t,i,j</sub> < 1 &nbsp; &nbsp; ∑<sub>i,j</sub>a<sub>t,i,j</sub> = 1<br/>\n</span>\n`;\nconst attentionWeightsTextShort = `<span>\n<strong>Attention weights</strong>\n</span>\n`;\nconst mulText = `<span  style=\"font-size: 14px; line-height: 16px; padding-left: 5px;\">Multiply attention weight and corresponding hidden state\n</span>\n`;\nconst sumText = `<span>\nCompute <strong>context vector</strong><br/>\nc<sub>t</sub> = <span style=\"font-size: 26px\">∑</span><sub>i</sub> a<sub>t,i</sub>h<sub>i</sub>\n</span>\n`;\nconst attentionDesc = `<span>\n<strong>Intuition!</strong><br/>\n<strong>Context c<sub>t</sub></strong> <u>attends</u> to the part of the input relevant to state:<br/>\n\"uczymy\" gives the most attention to \"learning\", some less to \"we\" (in polish the form of verb imply the person) and \"are\"<br/>\nproposed weights: \na<sub>1,1</sub> = 0.4; a<sub>1,2</sub> = 0.19; a<sub>1,3</sub> = 0.4; a<sub>1,4</sub> = 0.01;  \n</span>\n`;\nconst attentionDesc2 = `<span>\n<strong>Intuition!</strong><br/>\n<strong>Context c<sub>t</sub></strong> <u>attends</u> to the part of the input relevant to state:<br/>\n\"się\" gives the most attention to \"we\" and \"are\", some less to \"learning\" (it's complicated in polish)<br/>\nproposed weights: \na<sub>1,1</sub> = 0.35; a<sub>1,2</sub> = 0.35; a<sub>1,3</sub> = 0.29; a<sub>1,4</sub> = 0.01;  \n</span>\n`;\nconst attentionDesc3 = `<span>\n<strong>Intuition!</strong><br/>\n<strong>Context c<sub>t</sub></strong> <u>attends</u> to the part of the input relevant to state:<br/>\n\"attention\" ~ \"uwagi\"<br/>\nproposed weights: \na<sub>1,1</sub> = 0.05; a<sub>1,2</sub> = 0.01; a<sub>1,3</sub> = 0.05; a<sub>1,4</sub> = 0.89;  \n</span>\n`;\nconst step1 = {\n  inputs: {\n    color: '#FFD199',\n    borderColor: '#A35A00',\n    size: `${boxSize}px`,\n    blockName: 'inputs',\n    blockType: 'rect',\n    items: [\n      {\n        id: 'x1',\n        val: `<span>\n          x<sub>1</sub>\n        </span>`,\n        name: 'We',\n        position: [\n          firstRowPosition * animationWidth,\n          bottomRowPosition * animationHeight,\n        ],\n      },\n      {\n        id: 'x2',\n        val: `<span>\n          x<sub>2</sub>\n        </span>`,\n        name: 'are',\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth,\n          bottomRowPosition * animationHeight,\n        ],\n      },\n      {\n        id: 'x3',\n        val: `<span>\n          x<sub>3</sub>\n        </span>`,\n        name: 'learning',\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 2,\n          bottomRowPosition * animationHeight,\n        ],\n      },\n      {\n        id: 'x4',\n        val: `<span>\n          x<sub>4</sub>\n        </span>`,\n        name: 'attention',\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3,\n          bottomRowPosition * animationHeight,\n        ],\n      },\n    ],\n  },\n  attention: {\n    color: '#E2CFC4',\n    borderColor: '#523828',\n    size: `${boxSize}px`,\n    blockName: 'attention',\n    blockType: 'rect',\n    items: [],\n  },\n  hidden: {\n    color: '#9BF6FF',\n    borderColor: '#00838F',\n    size: `${boxSize}px`,\n    blockName: 'hidden',\n    blockType: 'rect',\n    items: [\n      {\n        id: 'h1',\n        val: `<span>\n          h<sub>1</sub>\n        </span>`,\n        tooltipValue: hiddentStateText,\n        position: [\n          firstRowPosition * animationWidth,\n          (bottomRowPosition - 0.2) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              firstRowPosition * animationWidth + boxSize / 2,\n              bottomRowPosition * animationHeight,\n            ],\n            to: [\n              firstRowPosition * animationWidth + boxSize / 2,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n      {\n        id: 'h2',\n        val: `<span>\n          h<sub>2</sub>\n        </span>`,\n        tooltipValue: hiddentStateText,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth,\n          (bottomRowPosition - 0.2) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth + boxSize / 2,\n              bottomRowPosition * animationHeight,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth + boxSize / 2,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n          },\n          {\n            from: [\n              firstRowPosition * animationWidth + boxSize,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize / 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize / 2,\n            ],\n          },\n        ],\n      },\n      {\n        id: 'h3',\n        val: `<span>\n          h<sub>3</sub>\n        </span>`,\n        tooltipValue: hiddentStateText,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 2,\n          (bottomRowPosition - 0.2) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 2 +\n                boxSize / 2,\n              bottomRowPosition * animationHeight,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 2 +\n                boxSize / 2,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n          },\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth + boxSize,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize / 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 2,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize / 2,\n            ],\n          },\n        ],\n      },\n      {\n        id: 'h4',\n        val: `<span>\n          h<sub>4</sub>\n        </span>`,\n        tooltipValue: hiddentStateText,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3,\n          (bottomRowPosition - 0.2) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                boxSize / 2,\n              bottomRowPosition * animationHeight,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                boxSize / 2,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n          },\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 2 + boxSize,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize / 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize / 2,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  state: {\n    color: '#FDFFB6',\n    borderColor: '#636600',\n    size: `${boxSize}px`,\n    blockName: 'state',\n    blockType: 'rect',\n    items: [\n      {\n        id: 's0',\n        val: `<span>\n          s<sub>0</sub>\n        </span>`,\n        tooltipValue: `\n          <span>\n          <strong>Initial decoder state</strong>\n          </span>\n        `,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 5,\n          (bottomRowPosition - 0.2) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 + boxSize,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize / 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 5,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize / 2,\n            ],\n            orientation: 'horizontal',\n          },\n        ],\n      },\n    ],\n  },\n  context: {\n    color: '#FFADAD',\n    borderColor: '#660000',\n    size: `${boxSize}px`,\n    blockName: 'context',\n    blockType: 'rect',\n    items: [],\n  },\n  output: {\n    color: '#CAFFBF',\n    borderColor: '#147A00',\n    size: `${boxSize}px`,\n    blockName: 'output',\n    blockType: 'rect',\n    items: [],\n  },\n  text: {\n    color: '#CAFFBF',\n    borderColor: '#333',\n    sizeX: `300px`,\n    sizeY: `50px`,\n    blockName: 'text',\n    blockType: 'text',\n    items: [],\n  },\n  softmax: {\n    color: '#CAFFBF',\n    borderColor: '#333',\n    sizeX: boxSize * 2 + boxPadding * 3 * animationWidth,\n    sizeY: `25px`,\n    blockName: 'softmax',\n    blockType: 'text',\n    items: [],\n  },\n  operations: {\n    color: '#E2E2DF',\n    borderColor: '#40403A',\n    size: `${circleR}px`,\n    blockName: 'operations',\n    blockType: 'circle',\n    items: [],\n  },\n};\n\nconst step2 = {\n  ...step1,\n  attention: {\n    ...step1.attention,\n    items: [\n      ...step1.attention.items,\n      {\n        id: 'e11',\n        val: `<span>\n          e<sub>1,1</sub>\n        </span>`,\n        tooltipValue: alignmentScoreText,\n        position: [\n          firstRowPosition * animationWidth,\n          (bottomRowPosition - 0.4) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step1.state.items[0].position[0] + boxSize / 2,\n              step1.state.items[0].position[1],\n            ],\n            points: [\n              [\n                step1.state.items[0].position[0] + boxSize / 2,\n                step1.state.items[0].position[1] - boxSize / 2,\n              ],\n              [\n                firstRowPosition * animationWidth + (boxSize * 2) / 3,\n                step1.state.items[0].position[1] - boxSize / 2,\n              ],\n            ],\n            to: [\n              firstRowPosition * animationWidth + (boxSize * 2) / 3,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n            orientation: 'multi-squared',\n          },\n          {\n            from: [\n              step1.hidden.items[0].position[0] + boxSize / 2,\n              step1.hidden.items[0].position[1],\n            ],\n            to: [\n              firstRowPosition * animationWidth + boxSize / 3,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n      {\n        id: 'e12',\n        val: `<span>\n          e<sub>1,2</sub>\n        </span>`,\n        tooltipValue: alignmentScoreText,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth,\n          (bottomRowPosition - 0.4) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step1.state.items[0].position[0] + boxSize / 2,\n              step1.state.items[0].position[1],\n            ],\n            points: [\n              [\n                step1.state.items[0].position[0] + boxSize / 2,\n                step1.state.items[0].position[1] - boxSize / 2,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth +\n                  (boxSize * 2) / 3,\n                step1.state.items[0].position[1] - boxSize / 2,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth +\n                (boxSize * 2) / 3,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n            orientation: 'multi-squared',\n          },\n          {\n            from: [\n              step1.hidden.items[1].position[0] + boxSize / 2,\n              step1.hidden.items[1].position[1],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth + boxSize / 3,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n      {\n        id: 'e13',\n        val: `<span>\n          e<sub>1,3</sub>\n        </span>`,\n        tooltipValue: alignmentScoreText,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 2,\n          (bottomRowPosition - 0.4) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step1.state.items[0].position[0] + boxSize / 2,\n              step1.state.items[0].position[1],\n            ],\n            points: [\n              [\n                step1.state.items[0].position[0] + boxSize / 2,\n                step1.state.items[0].position[1] - boxSize / 2,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 2 +\n                  (boxSize * 2) / 3,\n                step1.state.items[0].position[1] - boxSize / 2,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 2 +\n                (boxSize * 2) / 3,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n            orientation: 'multi-squared',\n          },\n          {\n            from: [\n              step1.hidden.items[2].position[0] + boxSize / 2,\n              step1.hidden.items[2].position[1],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 2 +\n                boxSize / 3,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n      {\n        id: 'e14',\n        val: `<span>\n          e<sub>1,4</sub>\n        </span>`,\n        tooltipValue: alignmentScoreText,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3,\n          (bottomRowPosition - 0.4) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step1.state.items[0].position[0] + boxSize / 2,\n              step1.state.items[0].position[1],\n            ],\n            points: [\n              [\n                step1.state.items[0].position[0] + boxSize / 2,\n                step1.state.items[0].position[1] - boxSize / 2,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 3 +\n                  (boxSize * 2) / 3,\n                step1.state.items[0].position[1] - boxSize / 2,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                (boxSize * 2) / 3,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n            orientation: 'multi-squared',\n          },\n          {\n            from: [\n              step1.hidden.items[3].position[0] + boxSize / 2,\n              step1.hidden.items[3].position[1],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                boxSize / 3,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  text: {\n    ...step1.text,\n    items: [\n      ...step1.text.items,\n      {\n        id: 'alignment-scores',\n        val: alignScoresText,\n        sizeX: `250px`,\n        sizeY: `100px`,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 4,\n          (bottomRowPosition - 0.6) * animationHeight + boxSize * 1.2,\n        ],\n      },\n    ],\n  },\n};\n\nconst step3 = {\n  ...step2,\n  softmax: {\n    ...step2.softmax,\n    items: [\n      ...step2.softmax.items,\n      {\n        id: 'softmax-layer',\n        val: `<span>\n          softmax\n        </span>`,\n        position: [0, (bottomRowPosition - 0.5) * animationHeight],\n        lines: [\n          {\n            from: [\n              step2.attention.items[0].position[0] + boxSize / 2,\n              step2.attention.items[0].position[1],\n            ],\n            to: [\n              step2.attention.items[0].position[0] + boxSize / 2,\n              (bottomRowPosition - 0.5) * animationHeight + 25,\n            ],\n          },\n          {\n            from: [\n              step2.attention.items[1].position[0] + boxSize / 2,\n              step2.attention.items[1].position[1],\n            ],\n            to: [\n              step2.attention.items[1].position[0] + boxSize / 2,\n              (bottomRowPosition - 0.5) * animationHeight + 25,\n            ],\n          },\n          {\n            from: [\n              step2.attention.items[2].position[0] + boxSize / 2,\n              step2.attention.items[2].position[1],\n            ],\n            to: [\n              step2.attention.items[2].position[0] + boxSize / 2,\n              (bottomRowPosition - 0.5) * animationHeight + 25,\n            ],\n          },\n          {\n            from: [\n              step2.attention.items[3].position[0] + boxSize / 2,\n              step2.attention.items[3].position[1],\n            ],\n            to: [\n              step2.attention.items[3].position[0] + boxSize / 2,\n              (bottomRowPosition - 0.5) * animationHeight + 25,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n};\n\nconst step4 = {\n  ...step3,\n  attention: {\n    ...step3.attention,\n    items: [\n      ...step3.attention.items,\n      {\n        id: 'a11',\n        val: `<span>\n          a<sub>1,1</sub>\n        </span>`,\n        position: [\n          firstRowPosition * animationWidth,\n          (bottomRowPosition - 0.65) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step3.softmax.items[0].position[0] + boxSize * 0.75,\n              step3.softmax.items[0].position[1],\n            ],\n            to: [\n              firstRowPosition * animationWidth + boxSize / 2,\n              (bottomRowPosition - 0.65) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n      {\n        id: 'a12',\n        val: `<span>\n          a<sub>1,2</sub>\n        </span>`,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth,\n          (bottomRowPosition - 0.65) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step3.softmax.items[0].position[0] +\n                boxSize * 0.75 +\n                boxPadding * animationWidth,\n              step3.softmax.items[0].position[1],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth + boxSize / 2,\n              (bottomRowPosition - 0.65) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n      {\n        id: 'a13',\n        val: `<span>\n          a<sub>1,3</sub>\n        </span>`,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 2,\n          (bottomRowPosition - 0.65) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step3.softmax.items[0].position[0] +\n                boxSize +\n                boxPadding * 2 * animationWidth,\n              step3.softmax.items[0].position[1],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 2 +\n                boxSize / 2,\n              (bottomRowPosition - 0.65) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n      {\n        id: 'a14',\n        val: `<span>\n          a<sub>1,4</sub>\n        </span>`,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3,\n          (bottomRowPosition - 0.65) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step3.softmax.items[0].position[0] +\n                boxSize * 1.2 +\n                boxPadding * 3 * animationWidth,\n              step3.softmax.items[0].position[1],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                boxSize / 2,\n              (bottomRowPosition - 0.65) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  text: {\n    ...step3.text,\n    items: [\n      ...step3.text.items,\n      {\n        id: 'attention-weights',\n        val: attentionWeightsText,\n        sizeX: `350px`,\n        sizeY: `100px`,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 4,\n          (bottomRowPosition - 0.6) * animationHeight - boxSize * 1.1,\n        ],\n      },\n    ],\n  },\n};\n\nconst step5 = {\n  ...step4,\n  operations: {\n    ...step4.operations,\n    items: [\n      ...step4.operations.items,\n      {\n        id: 'mul11',\n        val: `<span>\n          <strong>X</strong>\n        </span>`,\n        position: [\n          firstRowPosition * animationWidth + boxSize / 2,\n          (bottomRowPosition - 0.75) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step4.attention.items[4].position[0] + boxSize / 2,\n              step4.attention.items[4].position[1],\n            ],\n            to: [\n              firstRowPosition * animationWidth + boxSize / 2,\n              (bottomRowPosition - 0.75) * animationHeight + circleR,\n            ],\n          },\n          {\n            from: [\n              step4.hidden.items[0].position[0],\n              step4.hidden.items[0].position[1] + boxSize / 6,\n            ],\n            points: [\n              [2, (bottomRowPosition - 0.3) * animationHeight + circleR],\n              [2, (bottomRowPosition - 0.7) * animationHeight + circleR],\n            ],\n            to: [\n              firstRowPosition * animationWidth + circleR / 2,\n              (bottomRowPosition - 0.75) * animationHeight,\n            ],\n            orientation: 'multi-curved',\n          },\n        ],\n      },\n    ],\n  },\n  text: {\n    ...step4.text,\n    items: [\n      ...step4.text.items,\n      {\n        id: 'mul-text',\n        val: mulText,\n        sizeX: `220px`,\n        sizeY: `50px`,\n        position: [\n          step4.attention.items[5].position[0] - 30,\n          step4.attention.items[5].position[1] - boxSize * 1.5,\n        ],\n      },\n    ],\n  },\n};\n\nconst step6 = {\n  ...step5,\n  operations: {\n    ...step5.operations,\n    items: [\n      ...step5.operations.items,\n      {\n        id: 'mul12',\n        val: `<span>\n          <strong>X</strong>\n        </span>`,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth + boxSize / 2,\n          (bottomRowPosition - 0.75) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step5.attention.items[5].position[0] + boxSize / 2,\n              step5.attention.items[5].position[1],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth + boxSize / 2,\n              (bottomRowPosition - 0.75) * animationHeight + circleR,\n            ],\n          },\n          {\n            from: [\n              step5.hidden.items[1].position[0],\n              step5.hidden.items[1].position[1] + boxSize / 6,\n            ],\n            points: [\n              [\n                (firstRowPosition + boxPadding) * animationWidth - circleR,\n                (bottomRowPosition - 0.3) * animationHeight + circleR,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth - circleR,\n                (bottomRowPosition - 0.7) * animationHeight + circleR,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth + circleR / 2,\n              (bottomRowPosition - 0.75) * animationHeight,\n            ],\n            orientation: 'multi-curved',\n          },\n        ],\n      },\n      {\n        id: 'mul13',\n        val: `<span>\n          <strong>X</strong>\n        </span>`,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 2 + boxSize / 2,\n          (bottomRowPosition - 0.75) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step5.attention.items[6].position[0] + boxSize / 2,\n              step5.attention.items[6].position[1],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 2 +\n                boxSize / 2,\n              (bottomRowPosition - 0.75) * animationHeight + circleR,\n            ],\n          },\n          {\n            from: [\n              step5.hidden.items[2].position[0],\n              step5.hidden.items[2].position[1] + boxSize / 6,\n            ],\n            points: [\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 2 - circleR,\n                (bottomRowPosition - 0.3) * animationHeight + circleR,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 2 - circleR,\n                (bottomRowPosition - 0.7) * animationHeight + circleR,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 2 +\n                circleR / 2,\n              (bottomRowPosition - 0.75) * animationHeight,\n            ],\n            orientation: 'multi-curved',\n          },\n        ],\n      },\n      {\n        id: 'mul14',\n        val: `<span>\n          <strong>X</strong>\n        </span>`,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 3 + boxSize / 2,\n          (bottomRowPosition - 0.75) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step5.attention.items[7].position[0] + boxSize / 2,\n              step5.attention.items[7].position[1],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                boxSize / 2,\n              (bottomRowPosition - 0.75) * animationHeight + circleR,\n            ],\n          },\n          {\n            from: [\n              step5.hidden.items[3].position[0],\n              step5.hidden.items[3].position[1] + boxSize / 6,\n            ],\n            points: [\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 3 - circleR,\n                (bottomRowPosition - 0.3) * animationHeight + circleR,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 3 - circleR,\n                (bottomRowPosition - 0.7) * animationHeight + circleR,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                circleR / 2,\n              (bottomRowPosition - 0.75) * animationHeight,\n            ],\n            orientation: 'multi-curved',\n          },\n        ],\n      },\n    ],\n  },\n  text: {\n    ...step4.text,\n    items: [step4.text.items[0], step4.text.items[1]],\n  },\n};\n\nconst step7 = {\n  ...step6,\n  operations: {\n    ...step6.operations,\n    items: [\n      ...step6.operations.items,\n      {\n        id: 'sum',\n        val: `<span>\n          <strong>+</strong>\n        </span>`,\n        tooltipValue: contextText,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 6,\n          (bottomRowPosition - 0.55) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step6.operations.items[0].position[0],\n              step6.operations.items[0].position[1] - circleR,\n            ],\n            points: [\n              [\n                step6.operations.items[0].position[0],\n                step6.operations.items[0].position[1] - circleR - 5,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 6,\n                step6.operations.items[0].position[1] - circleR - 5,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 6,\n              (bottomRowPosition - 0.55) * animationHeight - circleR,\n            ],\n            orientation: 'multi-squared',\n          },\n          {\n            from: [\n              step6.operations.items[1].position[0],\n              step6.operations.items[1].position[1] - circleR,\n            ],\n            points: [\n              [\n                step6.operations.items[1].position[0],\n                step6.operations.items[1].position[1] - circleR - 5,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 6,\n                step6.operations.items[0].position[1] - circleR - 5,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 6,\n              (bottomRowPosition - 0.55) * animationHeight - circleR,\n            ],\n            orientation: 'multi-squared',\n          },\n          {\n            from: [\n              step6.operations.items[2].position[0],\n              step6.operations.items[2].position[1] - circleR,\n            ],\n            points: [\n              [\n                step6.operations.items[2].position[0],\n                step6.operations.items[2].position[1] - circleR - 5,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 6,\n                step6.operations.items[0].position[1] - circleR - 5,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 6,\n              (bottomRowPosition - 0.55) * animationHeight - circleR,\n            ],\n            orientation: 'multi-squared',\n          },\n          {\n            from: [\n              step6.operations.items[3].position[0],\n              step6.operations.items[3].position[1] - circleR,\n            ],\n            points: [\n              [\n                step6.operations.items[3].position[0],\n                step6.operations.items[3].position[1] - circleR - 5,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 6,\n                step6.operations.items[0].position[1] - circleR - 5,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 6,\n              (bottomRowPosition - 0.55) * animationHeight - circleR,\n            ],\n            orientation: 'multi-squared',\n          },\n        ],\n      },\n    ],\n  },\n  text: {\n    ...step4.text,\n    items: [\n      {\n        ...step4.text.items[0],\n        sizeX: `170px`,\n        sizeY: `40px`,\n        val: alignScoresTextShort,\n        position: [\n          step4.text.items[0].position[0] - 10,\n          step4.text.items[0].position[1] + 40,\n        ],\n      },\n      {\n        ...step4.text.items[1],\n        sizeX: `170px`,\n        sizeY: `40px`,\n        val: attentionWeightsTextShort,\n        position: [\n          step4.text.items[1].position[0] - 10,\n          step4.text.items[1].position[1] + 40,\n        ],\n      },\n      {\n        id: 'sum-text',\n        sizeX: `300px`,\n        sizeY: `100px`,\n        val: sumText,\n        position: [\n          step4.text.items[1].position[0] + boxSize * 5,\n          step4.text.items[1].position[1],\n        ],\n      },\n    ],\n  },\n};\n\nconst step8 = {\n  ...step7,\n  state: {\n    ...step7.state,\n    items: [\n      ...step7.state.items,\n      {\n        id: 's1',\n        val: `<span>\n          s<sub>1</sub>\n        </span>`,\n        tooltipValue: stateText,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 7,\n          (bottomRowPosition - 0.2) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step7.state.items[0].position[0] + boxSize,\n              step7.state.items[0].position[1] + boxSize / 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 7,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize / 2,\n            ],\n            orientation: 'horizontal',\n          },\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 7 -\n                boxSize / 3,\n              bottomRowPosition * animationHeight,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 7 +\n                boxSize / 6,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n          },\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 7 + boxSize,\n              bottomRowPosition * animationHeight,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 7 +\n                (boxSize * 2) / 3,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  context: {\n    ...step7.context,\n    items: [\n      ...step7.context.items,\n      {\n        id: 'c1',\n        val: `<span>\n          c<sub>1</sub>\n        </span>`,\n        tooltipValue: contextText,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 7 - boxSize,\n          bottomRowPosition * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step7.operations.items[4].position[0],\n              step7.operations.items[4].position[1] + circleR,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 7 -\n                (boxSize * 2) / 3,\n              bottomRowPosition * animationHeight,\n            ],\n            orientation: 'vertical',\n          },\n        ],\n      },\n    ],\n  },\n  output: {\n    ...step7.output,\n    items: [\n      ...step7.output.items,\n      {\n        id: 'y0',\n        val: `<span>\n          y<sub>0</sub>\n        </span>`,\n        name: '[START]',\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 7 + boxSize / 2,\n          bottomRowPosition * animationHeight,\n        ],\n      },\n    ],\n  },\n};\n\nconst step9 = {\n  ...step8,\n  output: {\n    ...step8.output,\n    items: [\n      ...step8.output.items,\n      {\n        id: 'y1-o',\n        val: `<span>\n          y<sub>1</sub>\n        </span>`,\n        name: 'uczymy',\n        namePosition: 'top',\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 7,\n          (bottomRowPosition - 0.4) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step8.state.items[1].position[0] + boxSize / 2,\n              step8.state.items[1].position[1],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 7 +\n                boxSize / 2,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  text: {\n    ...step8.text,\n    items: [\n      step8.text.items[0],\n      step8.text.items[1],\n      {\n        ...step8.text.items[2],\n        val: attentionDesc,\n        sizeX: '550',\n        sizeY: '150',\n        position: [\n          step8.text.items[2].position[0],\n          step8.text.items[2].position[1] - boxSize + 10,\n        ],\n      },\n    ],\n  },\n};\n\nconst step10 = {\n  ...step9,\n  context: {\n    ...step9.context,\n    items: [\n      {\n        id: 'c1',\n        val: `<span>\n          c<sub>1</sub>\n        </span>`,\n        tooltipValue: contextText,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 7 - boxSize,\n          bottomRowPosition * animationHeight,\n        ],\n      },\n    ],\n  },\n  attention: {\n    ...step9.attention,\n    items: [\n      {\n        ...step9.attention.items[0],\n        val: `<span>\n          e<sub>2,1</sub>\n        </span>`,\n        lines: [\n          {\n            from: [\n              step9.state.items[1].position[0] + boxSize / 3,\n              step9.state.items[1].position[1],\n            ],\n            points: [\n              [\n                step9.state.items[1].position[0] + boxSize / 3,\n                step9.state.items[1].position[1] - boxSize / 2,\n              ],\n              [\n                firstRowPosition * animationWidth + (boxSize * 2) / 3,\n                step9.state.items[1].position[1] - boxSize / 2,\n              ],\n            ],\n            to: [\n              firstRowPosition * animationWidth + (boxSize * 2) / 3,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n            orientation: 'multi-squared',\n          },\n          step9.attention.items[0].lines[1],\n        ],\n      },\n      {\n        ...step9.attention.items[1],\n        val: `<span>\n          e<sub>2,2</sub>\n        </span>`,\n        lines: [\n          {\n            from: [\n              step9.state.items[1].position[0] + boxSize / 3,\n              step9.state.items[1].position[1],\n            ],\n            points: [\n              [\n                step9.state.items[1].position[0] + boxSize / 3,\n                step9.state.items[1].position[1] - boxSize / 2,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth +\n                  (boxSize * 2) / 3,\n                step9.state.items[1].position[1] - boxSize / 2,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth +\n                (boxSize * 2) / 3,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n            orientation: 'multi-squared',\n          },\n          step9.attention.items[1].lines[1],\n        ],\n      },\n      {\n        ...step9.attention.items[2],\n        val: `<span>\n          e<sub>2,3</sub>\n        </span>`,\n        lines: [\n          {\n            from: [\n              step9.state.items[1].position[0] + boxSize / 3,\n              step9.state.items[1].position[1],\n            ],\n            points: [\n              [\n                step9.state.items[1].position[0] + boxSize / 3,\n                step9.state.items[1].position[1] - boxSize / 2,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 2 +\n                  (boxSize * 2) / 3,\n                step9.state.items[1].position[1] - boxSize / 2,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 2 +\n                (boxSize * 2) / 3,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n            orientation: 'multi-squared',\n          },\n          step9.attention.items[2].lines[1],\n        ],\n      },\n      {\n        ...step9.attention.items[3],\n        val: `<span>\n          e<sub>2,4</sub>\n        </span>`,\n        lines: [\n          {\n            from: [\n              step9.state.items[1].position[0] + boxSize / 3,\n              step9.state.items[1].position[1],\n            ],\n            points: [\n              [\n                step9.state.items[1].position[0] + boxSize / 3,\n                step9.state.items[1].position[1] - boxSize / 2,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 3 +\n                  (boxSize * 2) / 3,\n                step9.state.items[1].position[1] - boxSize / 2,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                (boxSize * 2) / 3,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n            orientation: 'multi-squared',\n          },\n          step9.attention.items[3].lines[1],\n        ],\n      },\n      {\n        ...step9.attention.items[4],\n        val: `<span>\n          a<sub>2,1</sub>\n        </span>`,\n      },\n      {\n        ...step9.attention.items[5],\n        val: `<span>\n          a<sub>2,2</sub>\n        </span>`,\n      },\n      {\n        ...step9.attention.items[6],\n        val: `<span>\n          a<sub>2,3</sub>\n        </span>`,\n      },\n      {\n        ...step9.attention.items[7],\n        val: `<span>\n          a<sub>2,4</sub>\n        </span>`,\n      },\n    ],\n  },\n  text: {\n    ...step9.text,\n    items: [\n      step9.text.items[0],\n      step9.text.items[1],\n      {\n        ...step9.text.items[2],\n        val: `<span>Calculate new attention weights for given state <strong>s<sub>1</sub></strong> (t = 2)</span>`,\n        sizeX: '550',\n        sizeY: '50',\n        position: [\n          step9.text.items[2].position[0],\n          step9.text.items[2].position[1] + boxSize,\n        ],\n      },\n    ],\n  },\n};\n\nconst step11 = {\n  ...step10,\n  context: {\n    ...step10.context,\n    items: [\n      ...step10.context.items,\n      {\n        id: 'c2',\n        val: `<span>\n          c<sub>2</sub>\n        </span>`,\n        tooltipValue: contextText,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 8,\n          bottomRowPosition * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step7.operations.items[4].position[0],\n              step7.operations.items[4].position[1] + circleR,\n            ],\n            points: [\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 6,\n                bottomRowPosition * animationHeight + boxSize + 35,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 8 +\n                  boxSize / 2,\n                bottomRowPosition * animationHeight + boxSize + 35,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 8 +\n                boxSize / 2,\n              bottomRowPosition * animationHeight + boxSize,\n            ],\n            orientation: 'multi-squared',\n          },\n        ],\n      },\n    ],\n  },\n  text: {\n    ...step10.text,\n    items: [\n      step10.text.items[0],\n      step10.text.items[1],\n      {\n        ...step10.text.items[2],\n        val: attentionDesc2,\n        sizeX: '550',\n        sizeY: '150',\n        position: [\n          step10.text.items[2].position[0],\n          step10.text.items[2].position[1] - boxSize,\n        ],\n      },\n    ],\n  },\n};\n\nconst step12 = {\n  ...step11,\n  state: {\n    ...step11.state,\n    items: [\n      ...step11.state.items,\n      {\n        id: 's2',\n        val: `<span>\n          s<sub>2</sub>\n        </span>`,\n        tooltipValue: stateText,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 8 + boxSize / 2,\n          (bottomRowPosition - 0.2) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step11.state.items[1].position[0] + boxSize,\n              step11.state.items[1].position[1] + boxSize / 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 8 +\n                boxSize / 2,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize / 2,\n            ],\n            orientation: 'horizontal',\n          },\n          {\n            from: [\n              step11.context.items[1].position[0] + boxSize / 2,\n              step11.context.items[1].position[1],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 8 +\n                boxSize / 4 +\n                boxSize / 2,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n          },\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 8 +\n                boxSize * 2,\n              bottomRowPosition * animationHeight,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 8 +\n                (boxSize * 2) / 3 +\n                boxSize / 2,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  output: {\n    ...step11.output,\n    items: [\n      ...step11.output.items,\n      {\n        id: 'y1',\n        val: `<span>\n          y<sub>1</sub>\n        </span>`,\n        name: 'uczymy',\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 8 + boxSize * 1.5,\n          bottomRowPosition * animationHeight,\n        ],\n      },\n      {\n        id: 'y2-o',\n        val: `<span>\n          y<sub>2</sub>\n        </span>`,\n        name: 'się',\n        namePosition: 'top',\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 8 + boxSize / 2,\n          (bottomRowPosition - 0.4) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 8 + boxSize,\n              (bottomRowPosition - 0.2) * animationHeight,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 8 + boxSize,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n};\n\nconst step13 = {\n  ...step12,\n  context: {\n    ...step12.context,\n    items: [\n      step12.context.items[0],\n      {\n        ...step12.context.items[1],\n        lines: [],\n      },\n    ],\n  },\n  attention: {\n    ...step12.attention,\n    items: [\n      {\n        ...step12.attention.items[0],\n        val: `<span>\n            e<sub>3,1</sub>\n          </span>`,\n        lines: [\n          {\n            from: [\n              step12.state.items[2].position[0] + boxSize / 3,\n              step12.state.items[2].position[1],\n            ],\n            points: [\n              [\n                step12.state.items[2].position[0] + boxSize / 3,\n                step12.state.items[2].position[1] - boxSize / 2,\n              ],\n              [\n                firstRowPosition * animationWidth + (boxSize * 2) / 3,\n                step12.state.items[2].position[1] - boxSize / 2,\n              ],\n            ],\n            to: [\n              firstRowPosition * animationWidth + (boxSize * 2) / 3,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n            orientation: 'multi-squared',\n          },\n          step12.attention.items[0].lines[1],\n        ],\n      },\n      {\n        ...step12.attention.items[1],\n        val: `<span>\n              e<sub>3,2</sub>\n            </span>`,\n        lines: [\n          {\n            from: [\n              step12.state.items[2].position[0] + boxSize / 3,\n              step12.state.items[2].position[1],\n            ],\n            points: [\n              [\n                step12.state.items[2].position[0] + boxSize / 3,\n                step12.state.items[2].position[1] - boxSize / 2,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth +\n                  (boxSize * 2) / 3,\n                step12.state.items[2].position[1] - boxSize / 2,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth +\n                (boxSize * 2) / 3,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n            orientation: 'multi-squared',\n          },\n          step12.attention.items[1].lines[1],\n        ],\n      },\n      {\n        ...step12.attention.items[2],\n        val: `<span>\n              e<sub>3,3</sub>\n            </span>`,\n        lines: [\n          {\n            from: [\n              step12.state.items[2].position[0] + boxSize / 3,\n              step12.state.items[2].position[1],\n            ],\n            points: [\n              [\n                step12.state.items[2].position[0] + boxSize / 3,\n                step12.state.items[2].position[1] - boxSize / 2,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 2 +\n                  (boxSize * 2) / 3,\n                step12.state.items[2].position[1] - boxSize / 2,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 2 +\n                (boxSize * 2) / 3,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n            orientation: 'multi-squared',\n          },\n          step12.attention.items[2].lines[1],\n        ],\n      },\n      {\n        ...step12.attention.items[3],\n        val: `<span>\n              e<sub>3,4</sub>\n            </span>`,\n        lines: [\n          {\n            from: [\n              step12.state.items[2].position[0] + boxSize / 3,\n              step12.state.items[2].position[1],\n            ],\n            points: [\n              [\n                step12.state.items[2].position[0] + boxSize / 3,\n                step12.state.items[2].position[1] - boxSize / 2,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 3 +\n                  (boxSize * 2) / 3,\n                step12.state.items[2].position[1] - boxSize / 2,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                (boxSize * 2) / 3,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n            orientation: 'multi-squared',\n          },\n          step12.attention.items[3].lines[1],\n        ],\n      },\n      {\n        ...step12.attention.items[4],\n        val: `<span>\n          a<sub>3,1</sub>\n        </span>`,\n      },\n      {\n        ...step12.attention.items[5],\n        val: `<span>\n              a<sub>3,2</sub>\n            </span>`,\n      },\n      {\n        ...step12.attention.items[6],\n        val: `<span>\n              a<sub>3,3</sub>\n            </span>`,\n      },\n      {\n        ...step12.attention.items[7],\n        val: `<span>\n              a<sub>3,4</sub>\n            </span>`,\n      },\n    ],\n  },\n  text: {\n    ...step12.text,\n    items: [\n      step12.text.items[0],\n      step12.text.items[1],\n      {\n        ...step12.text.items[2],\n        val: `<span>Calculate new attention weights for given state <strong>s<sub>2</sub></strong> (t = 3)</span>`,\n        sizeX: '550',\n        sizeY: '50',\n        position: [\n          step12.text.items[2].position[0],\n          step12.text.items[2].position[1] + boxSize,\n        ],\n      },\n    ],\n  },\n};\n\nconst step14 = {\n  ...step13,\n  context: {\n    ...step13.context,\n    items: [\n      ...step13.context.items,\n      {\n        id: 'c3',\n        val: `<span>\n          c<sub>3</sub>\n        </span>`,\n        tooltipValue: contextText,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 10 - boxSize,\n          bottomRowPosition * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step13.operations.items[4].position[0],\n              step13.operations.items[4].position[1] + circleR,\n            ],\n            points: [\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 6,\n                bottomRowPosition * animationHeight + boxSize + 35,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 10 -\n                  boxSize / 2,\n                bottomRowPosition * animationHeight + boxSize + 35,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 10 -\n                boxSize / 2,\n              bottomRowPosition * animationHeight + boxSize,\n            ],\n            orientation: 'multi-squared',\n          },\n        ],\n      },\n    ],\n  },\n  text: {\n    ...step13.text,\n    items: [\n      step13.text.items[0],\n      step13.text.items[1],\n      {\n        ...step13.text.items[2],\n        val: attentionDesc3,\n        sizeX: '550',\n        sizeY: '150',\n        position: [\n          step13.text.items[2].position[0],\n          step13.text.items[2].position[1] - boxSize,\n        ],\n      },\n    ],\n  },\n};\n\nconst step15 = {\n  ...step14,\n  state: {\n    ...step14.state,\n    items: [\n      ...step14.state.items,\n      {\n        id: 's3',\n        val: `<span>\n          s<sub>3</sub>\n        </span>`,\n        tooltipValue: stateText,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 9 + boxSize * 1.5,\n          (bottomRowPosition - 0.2) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step14.state.items[2].position[0] + boxSize,\n              step14.state.items[2].position[1] + boxSize / 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 9 +\n                boxSize * 1.5,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize / 2,\n            ],\n            orientation: 'horizontal',\n          },\n          {\n            from: [\n              step14.context.items[2].position[0] + boxSize / 2,\n              step14.context.items[2].position[1],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 9 +\n                boxSize / 4 +\n                boxSize * 1.5,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n          },\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 9 +\n                boxSize * 3,\n              bottomRowPosition * animationHeight,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 9 +\n                (boxSize * 2) / 3 +\n                boxSize * 1.5,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  output: {\n    ...step14.output,\n    items: [\n      ...step14.output.items,\n      {\n        id: 'y2',\n        val: `<span>\n          y<sub>2</sub>\n        </span>`,\n        name: 'się',\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 9 + boxSize * 2.5,\n          bottomRowPosition * animationHeight,\n        ],\n      },\n      {\n        id: 'y3-o',\n        val: `<span>\n          y<sub>3</sub>\n        </span>`,\n        name: 'uwagi',\n        namePosition: 'top',\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 9 + boxSize * 1.5,\n          (bottomRowPosition - 0.4) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 9 +\n                boxSize * 2,\n              (bottomRowPosition - 0.2) * animationHeight,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 9 +\n                boxSize * 2,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n};\n\nconst step16 = {\n  ...step15,\n  context: {\n    ...step15.context,\n    items: [\n      step15.context.items[0],\n      step15.context.items[1],\n      {\n        ...step15.context.items[2],\n        lines: [],\n      },\n    ],\n  },\n  attention: {\n    ...step15.attention,\n    items: [\n      {\n        ...step15.attention.items[0],\n        val: `<span>\n            e<sub>4,1</sub>\n          </span>`,\n        lines: [\n          {\n            from: [\n              step15.state.items[3].position[0] + boxSize / 3,\n              step15.state.items[3].position[1],\n            ],\n            points: [\n              [\n                step15.state.items[3].position[0] + boxSize / 3,\n                step15.state.items[3].position[1] - boxSize / 2,\n              ],\n              [\n                firstRowPosition * animationWidth + (boxSize * 2) / 3,\n                step15.state.items[3].position[1] - boxSize / 2,\n              ],\n            ],\n            to: [\n              firstRowPosition * animationWidth + (boxSize * 2) / 3,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n            orientation: 'multi-squared',\n          },\n          step15.attention.items[0].lines[1],\n        ],\n      },\n      {\n        ...step15.attention.items[1],\n        val: `<span>\n              e<sub>4,2</sub>\n            </span>`,\n        lines: [\n          {\n            from: [\n              step15.state.items[3].position[0] + boxSize / 3,\n              step15.state.items[3].position[1],\n            ],\n            points: [\n              [\n                step15.state.items[3].position[0] + boxSize / 3,\n                step15.state.items[3].position[1] - boxSize / 2,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth +\n                  (boxSize * 2) / 3,\n                step15.state.items[3].position[1] - boxSize / 2,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth +\n                (boxSize * 2) / 3,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n            orientation: 'multi-squared',\n          },\n          step15.attention.items[1].lines[1],\n        ],\n      },\n      {\n        ...step15.attention.items[2],\n        val: `<span>\n              e<sub>4,3</sub>\n            </span>`,\n        lines: [\n          {\n            from: [\n              step15.state.items[3].position[0] + boxSize / 3,\n              step15.state.items[3].position[1],\n            ],\n            points: [\n              [\n                step15.state.items[3].position[0] + boxSize / 3,\n                step15.state.items[3].position[1] - boxSize / 2,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 2 +\n                  (boxSize * 2) / 3,\n                step15.state.items[3].position[1] - boxSize / 2,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 2 +\n                (boxSize * 2) / 3,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n            orientation: 'multi-squared',\n          },\n          step15.attention.items[2].lines[1],\n        ],\n      },\n      {\n        ...step15.attention.items[3],\n        val: `<span>\n              e<sub>4,4</sub>\n            </span>`,\n        lines: [\n          {\n            from: [\n              step15.state.items[3].position[0] + boxSize / 3,\n              step15.state.items[3].position[1],\n            ],\n            points: [\n              [\n                step15.state.items[3].position[0] + boxSize / 3,\n                step15.state.items[3].position[1] - boxSize / 2,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 3 +\n                  (boxSize * 2) / 3,\n                step15.state.items[3].position[1] - boxSize / 2,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 3 +\n                (boxSize * 2) / 3,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n            orientation: 'multi-squared',\n          },\n          step15.attention.items[3].lines[1],\n        ],\n      },\n      {\n        ...step15.attention.items[4],\n        val: `<span>\n          a<sub>4,1</sub>\n        </span>`,\n      },\n      {\n        ...step15.attention.items[5],\n        val: `<span>\n              a<sub>4,2</sub>\n            </span>`,\n      },\n      {\n        ...step15.attention.items[6],\n        val: `<span>\n              a<sub>4,3</sub>\n            </span>`,\n      },\n      {\n        ...step15.attention.items[7],\n        val: `<span>\n              a<sub>4,4</sub>\n            </span>`,\n      },\n    ],\n  },\n  text: {\n    ...step15.text,\n    items: [\n      step15.text.items[0],\n      step15.text.items[1],\n      {\n        ...step15.text.items[2],\n        val: `<span>Calculate new attention weights for given state <strong>s<sub>3</sub></strong> (t = 4)</span>`,\n        sizeX: '550',\n        sizeY: '50',\n        position: [\n          step15.text.items[2].position[0],\n          step15.text.items[2].position[1] + boxSize,\n        ],\n      },\n    ],\n  },\n};\n\nconst step17 = {\n  ...step16,\n  context: {\n    ...step16.context,\n    items: [\n      ...step16.context.items,\n      {\n        id: 'c4',\n        val: `<span>\n          c<sub>4</sub>\n        </span>`,\n        tooltipValue: contextText,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 11,\n          bottomRowPosition * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step16.operations.items[4].position[0],\n              step16.operations.items[4].position[1] + circleR,\n            ],\n            points: [\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 6,\n                bottomRowPosition * animationHeight + boxSize + 35,\n              ],\n              [\n                (firstRowPosition + boxPadding) * animationWidth * 11 +\n                  boxSize / 2,\n                bottomRowPosition * animationHeight + boxSize + 35,\n              ],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 11 +\n                boxSize / 2,\n              bottomRowPosition * animationHeight + boxSize,\n            ],\n            orientation: 'multi-squared',\n          },\n        ],\n      },\n    ],\n  },\n};\n\nconst step18 = {\n  ...step17,\n  state: {\n    ...step17.state,\n    items: [\n      ...step17.state.items,\n      {\n        id: 's4',\n        val: `<span>\n          s<sub>4</sub>\n        </span>`,\n        tooltipValue: stateText,\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 11 + boxSize * 0.5,\n          (bottomRowPosition - 0.2) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              step17.state.items[3].position[0] + boxSize,\n              step17.state.items[3].position[1] + boxSize / 2,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 11 +\n                boxSize * 0.5,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize / 2,\n            ],\n            orientation: 'horizontal',\n          },\n          {\n            from: [\n              step17.context.items[3].position[0] + boxSize / 2,\n              step17.context.items[3].position[1],\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 11 +\n                boxSize / 4 +\n                boxSize * 0.5,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n          },\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 11 +\n                boxSize * 2,\n              bottomRowPosition * animationHeight,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 11 +\n                (boxSize * 2) / 3 +\n                boxSize * 0.5,\n              (bottomRowPosition - 0.2) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  output: {\n    ...step17.output,\n    items: [\n      ...step17.output.items,\n      {\n        id: 'y3',\n        val: `<span>\n          y<sub>3</sub>\n        </span>`,\n        name: 'uwagi',\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 11 + boxSize * 1.5,\n          bottomRowPosition * animationHeight,\n        ],\n      },\n      {\n        id: 'y4-o',\n        val: `<span>\n          y<sub>4</sub>\n        </span>`,\n        name: '[STOP]',\n        namePosition: 'top',\n        position: [\n          (firstRowPosition + boxPadding) * animationWidth * 11 + boxSize * 0.5,\n          (bottomRowPosition - 0.4) * animationHeight,\n        ],\n        lines: [\n          {\n            from: [\n              (firstRowPosition + boxPadding) * animationWidth * 11 + boxSize,\n              (bottomRowPosition - 0.2) * animationHeight,\n            ],\n            to: [\n              (firstRowPosition + boxPadding) * animationWidth * 11 + boxSize,\n              (bottomRowPosition - 0.4) * animationHeight + boxSize,\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  text: {\n    ...step17.text,\n    items: [\n      step17.text.items[0],\n      step15.text.items[1],\n      {\n        ...step17.text.items[2],\n        val: `<span style=\"padding: 0 10px\">We're not using the fact that <b><i>h</i></b> vector is an ordered sequence. It is used as unordered set instead. To solve this we have to add a <strong>positional encoding</strong> to each element</span>`,\n        sizeX: '550',\n        sizeY: '120',\n        position: [\n          step17.text.items[2].position[0],\n          step17.text.items[2].position[1] - boxSize,\n        ],\n      },\n    ],\n  },\n};\n\nconst steps = {\n  step1,\n  step2,\n  step3,\n  step4,\n  step5,\n  step6,\n  step7,\n  step8,\n  step9,\n  step10,\n  step11,\n  step12,\n  step13,\n  step14,\n  step15,\n  step16,\n  step17,\n  step18,\n};\n\nexport { steps, animationWidth, animationHeight };\n","// @flow\nimport React, { useEffect, useState, useReducer } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Button from '@material-ui/core/Button';\nimport DiagramGenerator from '../../DiagramGenerator/DiagramGenerator';\nimport ProcessControls from '../../DiagramGenerator/ProcessControls';\n\nimport { steps, animationWidth, animationHeight } from './data';\n\nimport styles from './RNNWithAttention.module.scss';\n\nconst RNNWithAttention = () => {\n  const [step, setStep] = useState(1);\n\n  const onStepForward = () => {\n    setStep(step + 1);\n  };\n\n  const onStepBackward = () => {\n    setStep(step - 1);\n  };\n\n  const currStep = steps[`step${step}`];\n\n  return (\n    <div className={styles['rnn-continaer']}>\n      <DiagramGenerator\n        data={currStep}\n        step={step}\n        animationHeight={animationHeight}\n        animationWidth={animationWidth}\n        id=\"rnn-with-attention\"\n      />\n      <ProcessControls\n        onStepForward={onStepForward}\n        onStepBackward={onStepBackward}\n        prevDisabled={step < 2}\n        nextDisabled={step === Object.keys(steps).length}\n      />\n    </div>\n  );\n};\n\nexport default RNNWithAttention;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rnn-continaer\":\"RNNWithAttention-module--rnn-continaer--3t_Yo\"};"],"sourceRoot":""}
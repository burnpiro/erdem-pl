<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Blog by Kemal Erdem]]></title><description><![CDATA[Even complex things could be explain in a simple way.]]></description><link>https://erdem.pl</link><generator>RSS for Node</generator><lastBuildDate>Fri, 22 Nov 2019 19:10:59 GMT</lastBuildDate><item><title><![CDATA[JSF*ck - Does code weirdness affect execution performance?]]></title><description><![CDATA[Checking if how we write JS can change the performance of its execution even if it is the same code?]]></description><link>https://erdem.pl/2019/11/jsf-ck-does-code-weirdness-affect-execution-performance</link><guid isPermaLink="false">https://erdem.pl/2019/11/jsf-ck-does-code-weirdness-affect-execution-performance</guid><pubDate>Thu, 07 Nov 2019 00:00:00 GMT</pubDate><content:encoded>This post is created base on Martin Kleppe’s (@aemkei) work about converting JS to only six basic characters and still keeping it executable. It is a response to comment from Jonathan Means.For those who are reading this out of the context, I’m going…
                &lt;div style=&quot;margin-top=55px; font-style: italic;&quot;&gt;(This is an article posted to my blog at erdem.pl. You can read it online by &lt;a href=&quot;https://erdem.pl/2019/11/jsf-ck-does-code-weirdness-affect-execution-performance&quot;&gt;clicking here&lt;/a&gt;.)&lt;/div&gt;
              </content:encoded></item><item><title><![CDATA[React - state management without libraries (with hooks) PART 2]]></title><description><![CDATA[How to manage state without any external libraries in React - Part 2? Simplifying your reducers and application logic.]]></description><link>https://erdem.pl/2019/09/react-state-management-without-libraries-with-hooks-part-2</link><guid isPermaLink="false">https://erdem.pl/2019/09/react-state-management-without-libraries-with-hooks-part-2</guid><pubDate>Sun, 15 Sep 2019 00:00:00 GMT</pubDate><content:encoded>It might be beneficial to have CodeSandbox editor opened when reading this blog post.This is a second part of “State management without libraries”. If you didn’t read first one, it might be difficult to follow this one, so please check out Part 1What…
                &lt;div style=&quot;margin-top=55px; font-style: italic;&quot;&gt;(This is an article posted to my blog at erdem.pl. You can read it online by &lt;a href=&quot;https://erdem.pl/2019/09/react-state-management-without-libraries-with-hooks-part-2&quot;&gt;clicking here&lt;/a&gt;.)&lt;/div&gt;
              </content:encoded></item><item><title><![CDATA[React - state management without libraries (with hooks)]]></title><description><![CDATA[How to manage state without any external libraries in React? Structure and implementation of state manager for small and middle size apps with hooks.]]></description><link>https://erdem.pl/2019/09/react-state-management-without-libraries-with-hooks</link><guid isPermaLink="false">https://erdem.pl/2019/09/react-state-management-without-libraries-with-hooks</guid><pubDate>Fri, 06 Sep 2019 00:00:00 GMT</pubDate><content:encoded>It might be beneficial to have CodeSandbox editor opened when reading this blog post.Why don’t you want to use state manager anyway?State managers (like Redux or MobX) are really great but imho they are just to complex for small apps.What is a “small…
                &lt;div style=&quot;margin-top=55px; font-style: italic;&quot;&gt;(This is an article posted to my blog at erdem.pl. You can read it online by &lt;a href=&quot;https://erdem.pl/2019/09/react-state-management-without-libraries-with-hooks&quot;&gt;clicking here&lt;/a&gt;.)&lt;/div&gt;
              </content:encoded></item><item><title><![CDATA[A modern guide to Events in JavaScript]]></title><description><![CDATA[How Events are propagating through DOM elements? Is there a way to use it to our advantage?]]></description><link>https://erdem.pl/2019/08/a-modern-guide-to-events-in-java-script</link><guid isPermaLink="false">https://erdem.pl/2019/08/a-modern-guide-to-events-in-java-script</guid><pubDate>Mon, 19 Aug 2019 00:00:00 GMT</pubDate><content:encoded>What are Events?Events are objects and implement the Event interfaceThose objects are dispatched by the user agent (or the application itself) and handled by the Event Listener. Events are responsible for handling user interactions or network…
                &lt;div style=&quot;margin-top=55px; font-style: italic;&quot;&gt;(This is an article posted to my blog at erdem.pl. You can read it online by &lt;a href=&quot;https://erdem.pl/2019/08/a-modern-guide-to-events-in-java-script&quot;&gt;clicking here&lt;/a&gt;.)&lt;/div&gt;
              </content:encoded></item><item><title><![CDATA[React performance tricks]]></title><description><![CDATA[How React is able to execute so fast and still remain flexible for a developer?]]></description><link>https://erdem.pl/2019/08/react-performance-tricks</link><guid isPermaLink="false">https://erdem.pl/2019/08/react-performance-tricks</guid><pubDate>Sat, 10 Aug 2019 00:00:00 GMT</pubDate><content:encoded>This post requires a basic knowledge about Shapes and Inline Cache. If you didn’t read V8 function optimization, it might be difficult to follow this one.Every time someones talk about “performance” in React it’s usually about virtual DOM. It is an…
                &lt;div style=&quot;margin-top=55px; font-style: italic;&quot;&gt;(This is an article posted to my blog at erdem.pl. You can read it online by &lt;a href=&quot;https://erdem.pl/2019/08/react-performance-tricks&quot;&gt;clicking here&lt;/a&gt;.)&lt;/div&gt;
              </content:encoded></item><item><title><![CDATA[Can JSON.parse() be performance improvement?]]></title><description><![CDATA[JSON.parse is a slow way to create copy of object. But can it actually improve performance of our code?]]></description><link>https://erdem.pl/2019/08/can-json-parse-be-performance-improvement</link><guid isPermaLink="false">https://erdem.pl/2019/08/can-json-parse-be-performance-improvement</guid><pubDate>Wed, 07 Aug 2019 00:00:00 GMT</pubDate><content:encoded>This post requires a basic knowledge about Shapes and Inline Cache. If you didn’t read V8 function optimization, it might be difficult to follow this one.ProblemCreating a copy of an object is common practice in JS. You’ve probably done that while…
                &lt;div style=&quot;margin-top=55px; font-style: italic;&quot;&gt;(This is an article posted to my blog at erdem.pl. You can read it online by &lt;a href=&quot;https://erdem.pl/2019/08/can-json-parse-be-performance-improvement&quot;&gt;clicking here&lt;/a&gt;.)&lt;/div&gt;
              </content:encoded></item><item><title><![CDATA[V8 function optimization]]></title><description><![CDATA[JS engines are complicated piece of software. I want to quickly explain one of the optimization techniques V8 is using to speed up your code execution.]]></description><link>https://erdem.pl/2019/08/v-8-function-optimization</link><guid isPermaLink="false">https://erdem.pl/2019/08/v-8-function-optimization</guid><pubDate>Tue, 06 Aug 2019 00:00:00 GMT</pubDate><content:encoded>Setup (optional)If you don’t want to run it on your computer, please skip to this sectionFirst, we need to install V8 to be able to run it without whole package (node or web browser). I’ve created gist describing the process for Linux users.https…
                &lt;div style=&quot;margin-top=55px; font-style: italic;&quot;&gt;(This is an article posted to my blog at erdem.pl. You can read it online by &lt;a href=&quot;https://erdem.pl/2019/08/v-8-function-optimization&quot;&gt;clicking here&lt;/a&gt;.)&lt;/div&gt;
              </content:encoded></item><item><title><![CDATA[Is Symbol really useful?]]></title><description><![CDATA[Symbols, underestimated feature introduced in ES2015. Does it have any other purpose than interview questions?]]></description><link>https://erdem.pl/2019/07/is-symbol-really-useful</link><guid isPermaLink="false">https://erdem.pl/2019/07/is-symbol-really-useful</guid><pubDate>Wed, 24 Jul 2019 00:00:00 GMT</pubDate><content:encoded>Quick recap, what are those “Symbols” anyway?primitive value that represents a unique, non-String Object property keyThat’s Symbol definition from current spec. But what does it mean? You probably know other primitive types in JS (, , , ,  or…
                &lt;div style=&quot;margin-top=55px; font-style: italic;&quot;&gt;(This is an article posted to my blog at erdem.pl. You can read it online by &lt;a href=&quot;https://erdem.pl/2019/07/is-symbol-really-useful&quot;&gt;clicking here&lt;/a&gt;.)&lt;/div&gt;
              </content:encoded></item><item><title><![CDATA[How JS becomes multi threaded?]]></title><description><![CDATA[How we can perform costly operations on our server or user's browser? Multi threading in JavaScript comes to rescue!]]></description><link>https://erdem.pl/2019/07/how-js-becomes-multi-threaded</link><guid isPermaLink="false">https://erdem.pl/2019/07/how-js-becomes-multi-threaded</guid><pubDate>Thu, 11 Jul 2019 00:00:00 GMT</pubDate><content:encoded>This is advance staff, you don’t really need it to be great developer, so don’t be bothered if you don’t get everything at the beginning. Reading this makes you more aware than maybe 90% of all JS devs :) Throughout the years, JavaScript was…
                &lt;div style=&quot;margin-top=55px; font-style: italic;&quot;&gt;(This is an article posted to my blog at erdem.pl. You can read it online by &lt;a href=&quot;https://erdem.pl/2019/07/how-js-becomes-multi-threaded&quot;&gt;clicking here&lt;/a&gt;.)&lt;/div&gt;
              </content:encoded></item></channel></rss>
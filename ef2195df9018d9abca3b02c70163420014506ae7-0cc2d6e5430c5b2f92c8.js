(this.webpackJsonp=this.webpackJsonp||[]).push([[12],{"8fD0":function(t,s,n){"use strict";var i=n("q1tI"),o=n.n(i),e=n("dec9"),a=n("OMM4"),p=n("KQm4"),b=n("yfc5"),u={inputs:{color:"#FFD199",borderColor:"#A35A00",size:"150px",blockName:"inputs",blockType:"rect",items:[{id:"x1",val:'<span>\n          <img src="'+n.n(b).a+'" alt="orignal_img">\n        </span>',tooltipValue:"\n          <span>\n            Image source: <i>WIDER FACE</i> dataset\n          </span>\n        ",position:[12,250]}]},cnn:{color:"#bdbdbd",borderColor:"#636363",sizeX:"50px",sizeY:"100px",blockName:"cnn",blockType:"rect",items:[{id:"cnn",val:"<span>\n          CNN\n        </span>",tooltipValue:"\n          <span>\n            <strong>CNN</strong> is used to produce a grid of features. Architecture doesn't matter.\n          </span>\n        ",position:[199.5,275],lines:[{from:[162,325],to:[199.5,325],orientation:"horizontal"},{from:[249.5,325],to:[287,325],orientation:"horizontal"}]}]},attention:{color:"#E2CFC4",borderColor:"#523828",size:"50px",blockName:"attention",blockType:"rect",items:[]},hidden:{color:"#9BF6FF",borderColor:"#00838F",size:"50px",blockName:"hidden",blockType:"rect",items:[{id:"h11",val:"<span>\n          h<sub>1,1</sub>\n        </span>",position:[288,250]},{id:"h12",val:"<span>\n          h<sub>1,2</sub>\n        </span>",position:[338,250]},{id:"h13",val:"<span>\n          h<sub>1,3</sub>\n        </span>",position:[388,250]},{id:"h21",val:"<span>\n          h<sub>2,1</sub>\n        </span>",position:[288,300]},{id:"h22",val:"<span>\n          h<sub>2,2</sub>\n        </span>",position:[338,300]},{id:"h23",val:"<span>\n          h<sub>2,3</sub>\n        </span>",position:[388,300]},{id:"h31",val:"<span>\n          h<sub>3,1</sub>\n        </span>",position:[288,350]},{id:"h32",val:"<span>\n          h<sub>3,2</sub>\n        </span>",position:[338,350]},{id:"h33",val:"<span>\n          h<sub>3,3</sub>\n        </span>",position:[388,350]}]},state:{color:"#FDFFB6",borderColor:"#636600",size:"50px",blockName:"state",blockType:"rect",items:[{id:"s0",val:"<span>\n          s<sub>0</sub>\n        </span>",tooltipValue:"\n          <span>\n          <strong>Initial decoder state</strong>\n          </span>\n        ",position:[480,500*(.8-.2)],lines:[{from:[438,500*(.8-.2)+25],to:[480,500*(.8-.2)+25],orientation:"horizontal"}]}]},context:{color:"#FFADAD",borderColor:"#660000",size:"50px",blockName:"context",blockType:"rect",items:[]},output:{color:"#CAFFBF",borderColor:"#147A00",size:"50px",blockName:"output",blockType:"rect",items:[]},text:{color:"#CAFFBF",borderColor:"#333",sizeX:"200px",sizeY:"50px",blockName:"text",blockType:"text",items:[]},softmax:{color:"#CAFFBF",borderColor:"#333",sizeX:25,sizeY:150,blockName:"softmax",blockType:"text",items:[]},operations:{color:"#E2E2DF",borderColor:"#40403A",size:"16px",blockName:"operations",blockType:"circle",items:[]}},m=Object.assign({},u,{attention:Object.assign({},u.attention,{items:[].concat(Object(p.a)(u.attention.items),[{id:"e11",val:"<span>\n          e<sub>1,1,1</sub>\n        </span>",tooltipValue:"\n          <span>\n          e<sub>t,i,j</sub> = f<sub>att</sub>(s<sub>t-1</sub>, h<sub>i,j</sub>)\n          </span>\n        ",position:[288,500*(.8-.7)]},{id:"e12",val:"<span>\n          e<sub>1,1,2</sub>\n        </span>",tooltipValue:"\n          <span>\n          e<sub>t,i,j</sub> = f<sub>att</sub>(s<sub>t-1</sub>, h<sub>i,j</sub>)\n          </span>\n        ",position:[338,500*(.8-.7)]},{id:"e13",val:"<span>\n          e<sub>1,1,3</sub>\n        </span>",tooltipValue:"\n          <span>\n          e<sub>t,i,j</sub> = f<sub>att</sub>(s<sub>t-1</sub>, h<sub>i,j</sub>)\n          </span>\n        ",position:[388,500*(.8-.7)]},{id:"e21",val:"<span>\n          e<sub>1,2,1</sub>\n        </span>",tooltipValue:"\n          <span>\n          e<sub>t,i,j</sub> = f<sub>att</sub>(s<sub>t-1</sub>, h<sub>i,j</sub>)\n          </span>\n        ",position:[288,500*(.8-.7)+50]},{id:"e22",val:"<span>\n          e<sub>1,2,2</sub>\n        </span>",tooltipValue:"\n          <span>\n          e<sub>t,i,j</sub> = f<sub>att</sub>(s<sub>t-1</sub>, h<sub>i,j</sub>)\n          </span>\n        ",position:[338,500*(.8-.7)+50]},{id:"e23",val:"<span>\n          e<sub>1,2,2</sub>\n        </span>",tooltipValue:"\n          <span>\n          e<sub>t,i,j</sub> = f<sub>att</sub>(s<sub>t-1</sub>, h<sub>i,j</sub>)\n          </span>\n        ",position:[388,500*(.8-.7)+50]},{id:"e31",val:"<span>\n          e<sub>1,3,1</sub>\n        </span>",tooltipValue:"\n          <span>\n          e<sub>t,i,j</sub> = f<sub>att</sub>(s<sub>t-1</sub>, h<sub>i,j</sub>)\n          </span>\n        ",position:[288,500*(.8-.7)+100]},{id:"e32",val:"<span>\n          e<sub>1,3,2</sub>\n        </span>",tooltipValue:"\n          <span>\n          e<sub>t,i,j</sub> = f<sub>att</sub>(s<sub>t-1</sub>, h<sub>i,j</sub>)\n          </span>\n        ",position:[338,500*(.8-.7)+100]},{id:"e33",val:"<span>\n          e<sub>1,3,3</sub>\n        </span>",tooltipValue:"\n          <span>\n          e<sub>t,i,j</sub> = f<sub>att</sub>(s<sub>t-1</sub>, h<sub>i,j</sub>)\n          </span>\n        ",position:[388,500*(.8-.7)+100]}])}),state:Object.assign({},u.state,{items:[Object.assign({},u.state.items[0],{lines:[u.state.items[0].lines[0],{from:[u.state.items[0].position[0]+25,u.state.items[0].position[1]],to:[438,500*(.8-.7)+150]},{from:[u.hidden.items[1].position[0]+25,u.hidden.items[1].position[1]],to:[363,500*(.8-.7)+150]}]})]}),text:Object.assign({},u.text,{items:[].concat(Object(p.a)(u.text.items),[{id:"alignment-scores",val:'<span style="text-align: center; margin: 10px 0">\n          <strong>Alignment scores</strong><br/>\n          for all hidden features (h<sub>i,j</sub>)\n        </span>',sizeX:"250px",sizeY:"80px",position:[12,500*(.8-.6)]}])})}),c=Object.assign({},m,{softmax:Object.assign({},m.softmax,{items:[].concat(Object(p.a)(m.softmax.items),[{id:"softmax-layer",val:'<span style="transform: rotate(-90deg);">\n          softmax\n        </span>',position:[480,500*(.8-.7)],lines:[{from:[m.attention.items[5].position[0]+50,m.attention.items[5].position[1]+25],to:[480,500*(.8-.7)+75],orientation:"horizontal"}]}])})}),l=Object.assign({},c,{attention:Object.assign({},c.attention,{items:[].concat(Object(p.a)(c.attention.items),[{id:"a11",val:"<span>\n          a<sub>1,1,1</sub>\n        </span>",tooltipValue:"\n          <span>\n          a<sub>t,i,j</sub> = softmax(e<sub>t,i,j</sub>)\n          </span>\n        ",position:[530,500*(.8-.7)]},{id:"a12",val:"<span>\n          a<sub>1,1,2</sub>\n        </span>",tooltipValue:"\n          <span>\n          a<sub>t,i,j</sub> = softmax(e<sub>t,i,j</sub>)\n          </span>\n        ",position:[580,500*(.8-.7)]},{id:"a13",val:"<span>\n          a<sub>1,1,3</sub>\n        </span>",tooltipValue:"\n          <span>\n          a<sub>t,i,j</sub> = softmax(e<sub>t,i,j</sub>)\n          </span>\n        ",position:[630,500*(.8-.7)]},{id:"a21",val:"<span>\n          a<sub>1,2,1</sub>\n        </span>",tooltipValue:"\n          <span>\n          a<sub>t,i,j</sub> = softmax(e<sub>t,i,j</sub>)\n          </span>\n        ",position:[530,500*(.8-.7)+50],lines:[{from:[c.softmax.items[0].position[0]+25,c.softmax.items[0].position[1]+75],to:[530,125.00000000000004],orientation:"horizontal"}]},{id:"a22",val:"<span>\n          a<sub>1,2,2</sub>\n        </span>",tooltipValue:"\n          <span>\n          a<sub>t,i,j</sub> = softmax(e<sub>t,i,j</sub>)\n          </span>\n        ",position:[580,500*(.8-.7)+50]},{id:"a23",val:"<span>\n          a<sub>1,2,2</sub>\n        </span>",tooltipValue:"\n          <span>\n          a<sub>t,i,j</sub> = softmax(e<sub>t,i,j</sub>)\n          </span>\n        ",position:[630,500*(.8-.7)+50]},{id:"a31",val:"<span>\n          a<sub>1,3,1</sub>\n        </span>",tooltipValue:"\n          <span>\n          a<sub>t,i,j</sub> = softmax(e<sub>t,i,j</sub>)\n          </span>\n        ",position:[530,500*(.8-.7)+100]},{id:"a32",val:"<span>\n          a<sub>1,3,2</sub>\n        </span>",tooltipValue:"\n          <span>\n          a<sub>t,i,j</sub> = softmax(e<sub>t,i,j</sub>)\n          </span>\n        ",position:[580,500*(.8-.7)+100]},{id:"a33",val:"<span>\n          a<sub>1,3,3</sub>\n        </span>",tooltipValue:"\n          <span>\n          a<sub>t,i,j</sub> = softmax(e<sub>t,i,j</sub>)\n          </span>\n        ",position:[630,500*(.8-.7)+100]}])}),text:Object.assign({},c.text,{items:[].concat(Object(p.a)(c.text.items),[{id:"attention-weights",val:'<span style="text-align: center; margin: 10px 0">\n          <strong>Attention weights</strong><br/>\n          0 < a<sub>t,i,j</sub> < 1 <br/> ∑<sub>i,j</sub>a<sub>t,i,j</sub> = 1\n        </span>',sizeX:"250px",sizeY:"100px",position:[722,500*(.8-.65)]}])})}),r=Object.assign({},l,{operations:Object.assign({},l.operations,{items:[].concat(Object(p.a)(l.operations.items),[{id:"mul",val:'<span>\n          <strong style="font-size: 25px">o</strong>\n        </span>',tooltipValue:"<span>\n          Element-Wise multiplication <br/>\n          ∀<sub>i,j</sub>&nbsp; a<sub>t,i,j</sub> * h<sub>i,j</sub>\n        </span>",position:[601,375],lines:[{from:[l.attention.items[16].position[0]+25,l.attention.items[16].position[1]+50],to:[601,352]},{from:[l.hidden.items[8].position[0]+50,l.hidden.items[8].position[1]+25],to:[576,375],orientation:"horizontal"}]},{id:"sum",val:'<span>\n          <strong style="font-size: 25px">+</strong>\n        </span>',tooltipValue:'<span>\n          c<sub>t</sub> = <span style="font-size: 26px">∑</span><sub>i,j</sub> a<sub>t,i,j</sub>h<sub>i,j</sub>\n        </span>',position:[601,450],lines:[{from:[601,392],to:[601,425]}]}])}),context:Object.assign({},l.context,{items:[].concat(Object(p.a)(l.context.items),[{id:"c1",val:"<span>\n          c<sub>1</sub>\n        </span>",tooltipValue:'<span>\n          c<sub>t</sub> = <span style="font-size: 26px">∑</span><sub>i,j</sub> a<sub>t,i,j</sub>h<sub>i,j</sub>\n        </span>',position:[672,400],lines:[{from:[601,450],to:[672,425],orientation:"horizontal"}]}])})}),j=Object.assign({},r,{state:Object.assign({},r.state,{items:[].concat(Object(p.a)(r.state.items),[{id:"s1",val:"<span>\n          s<sub>1</sub>\n        </span>",tooltipValue:"\n          <span>\n           s<sub>t</sub> = g<sub>U</sub>(y<sub>t-1</sub>, s<sub>t-1</sub>, c<sub>t</sub>)\n          </span>\n        ",position:[718,500*(.8-.2)],lines:[{from:[r.state.items[0].position[0]+50,r.state.items[0].position[1]+25],to:[718,500*(.8-.2)+25],orientation:"horizontal"},{from:[r.context.items[0].position[0]+25,r.context.items[0].position[1]],to:[718+50/6,500*(.8-.2)+50]},{from:[768,400],to:[718+100/3,500*(.8-.2)+50]}]}])}),output:Object.assign({},r.output,{items:[].concat(Object(p.a)(r.output.items),[{id:"y0",val:"<span>\n          y<sub>0</sub>\n        </span>",name:"[START]",position:[743,400]}])})}),d=Object.assign({},j,{output:Object.assign({},j.output,{items:[].concat(Object(p.a)(j.output.items),[{id:"y1-o",val:"<span>\n          y<sub>1</sub>\n        </span>",name:"smiling",namePosition:"top",position:[718,500*(.8-.35)],lines:[{from:[j.state.items[1].position[0]+25,j.state.items[1].position[1]],to:[743,275]}]}])})}),g=Object.assign({},d,{state:Object.assign({},d.state,{items:[Object.assign({},d.state.items[0],{lines:[d.state.items[0].lines[0],d.state.items[0].lines[2]]}),Object.assign({},d.state.items[1],{lines:[].concat(Object(p.a)(d.state.items[1].lines),[{from:[d.state.items[1].position[0],d.state.items[1].position[1]],to:[d.attention.items[8].position[0]+50,d.attention.items[8].position[1]+50]}])})]}),context:Object.assign({},d.context,{items:[Object.assign({},d.context.items[0],{lines:[]})]}),operations:Object.assign({},d.operations,{items:[]}),attention:Object.assign({},d.attention,{items:d.attention.items.map((function(t,s){var n=s<9,i=s%3+1,o=Number.parseInt(s/3,10)-(n?-1:2);return Object.assign({},t,{val:"<span>\n          "+(n?"e":"a")+"<sub>2,"+o+","+i+"</sub>\n        </span>"})}))})}),x=Object.assign({},g,{operations:Object.assign({},d.operations),context:Object.assign({},g.context,{items:[].concat(Object(p.a)(g.context.items),[{id:"c2",val:"<span>\n          c<sub>2</sub>\n        </span>",tooltipValue:'<span>\n          c<sub>t</sub> = <span style="font-size: 26px">∑</span><sub>i,j</sub> a<sub>t,i,j</sub>h<sub>i,j</sub>\n        </span>',position:[818,400],lines:[{from:[601,450],points:[[651,450],[651,495],[843,495]],to:[843,450],orientation:"multi-squared"}]}])})}),f=Object.assign({},x,{state:Object.assign({},x.state,{items:[].concat(Object(p.a)(x.state.items),[{id:"s2",val:"<span>\n          s<sub>2</sub>\n        </span>",tooltipValue:"\n          <span>\n           s<sub>t</sub> = g<sub>U</sub>(y<sub>t-1</sub>, s<sub>t-1</sub>, c<sub>t</sub>)\n          </span>\n        ",position:[x.state.items[1].position[0]+125,x.state.items[1].position[1]],lines:[{from:[x.state.items[1].position[0]+50,x.state.items[1].position[1]+25],to:[x.state.items[1].position[0]+125,x.state.items[1].position[1]+25],orientation:"horizontal"},{from:[x.context.items[1].position[0]+25,x.context.items[1].position[1]],to:[x.state.items[1].position[0]+140,x.state.items[1].position[1]+50]},{from:[914,400],to:[x.state.items[1].position[0]+155,x.state.items[1].position[1]+50]}]}])}),output:Object.assign({},x.output,{items:[].concat(Object(p.a)(x.output.items),[{id:"y1",val:"<span>\n          y<sub>1</sub>\n        </span>",name:"smiling",position:[889,400]}])})}),O=Object.assign({},f,{output:Object.assign({},f.output,{items:[].concat(Object(p.a)(f.output.items),[{id:"y2-o",val:"<span>\n          y<sub>2</sub>\n        </span>",name:"man",namePosition:"top",position:[f.state.items[2].position[0],f.state.items[2].position[1]-75],lines:[{from:[f.state.items[2].position[0]+25,f.state.items[2].position[1]],to:[f.state.items[2].position[0]+25,f.state.items[2].position[1]-25]}]}])})}),h=Object.assign({},O,{operations:Object.assign({},g.operations),context:Object.assign({},O.context,{items:[O.context.items[0],Object.assign({},O.context.items[1],{lines:[]})]}),state:Object.assign({},O.state,{items:[O.state.items[0],Object.assign({},O.state.items[1],{lines:[O.state.items[1].lines[0],O.state.items[1].lines[1],O.state.items[1].lines[2]]}),Object.assign({},O.state.items[2],{lines:[].concat(Object(p.a)(O.state.items[2].lines),[{from:[O.state.items[2].position[0],O.state.items[2].position[1]],points:[[O.state.items[2].position[0],O.state.items[2].position[1]-10],[O.attention.items[8].position[0]+150,O.state.items[2].position[1]-10]],to:[O.attention.items[8].position[0]+50,O.attention.items[8].position[1]+50],orientation:"multi-squared"}])})]}),attention:Object.assign({},O.attention,{items:O.attention.items.map((function(t,s){var n=s<9,i=s%3+1,o=Number.parseInt(s/3,10)-(n?-1:2);return Object.assign({},t,{val:"<span>\n           "+(n?"e":"a")+"<sub>3,"+o+","+i+"</sub>\n        </span>"})}))})}),v=Object.assign({},h,{operations:Object.assign({},O.operations),context:Object.assign({},h.context,{items:[].concat(Object(p.a)(h.context.items),[{id:"c3",val:"<span>\n          c<sub>3</sub>\n        </span>",tooltipValue:'<span>\n          c<sub>t</sub> = <span style="font-size: 26px">∑</span><sub>i,j</sub> a<sub>t,i,j</sub>h<sub>i,j</sub>\n        </span>',position:[964,400],lines:[{from:[O.operations.items[1].position[0],O.operations.items[1].position[1]],points:[[O.operations.items[1].position[0]+50,O.operations.items[1].position[1]],[O.operations.items[1].position[0]+50,495],[989,495]],to:[989,450],orientation:"multi-squared"}]}])})}),y=Object.assign({},v,{output:Object.assign({},v.output,{items:[].concat(Object(p.a)(v.output.items),[{id:"y2",val:"<span>\n          y<sub>2</sub>\n        </span>",name:"man",position:[v.context.items[2].position[0]+75,v.context.items[2].position[1]]}])}),state:Object.assign({},v.state,{items:[].concat(Object(p.a)(v.state.items),[{id:"s3",val:"<span>\n          s<sub>3</sub>\n        </span>",tooltipValue:"\n          <span>\n           s<sub>t</sub> = g<sub>U</sub>(y<sub>t-1</sub>, s<sub>t-1</sub>, c<sub>t</sub>)\n          </span>\n        ",position:[v.state.items[2].position[0]+150,v.state.items[2].position[1]],lines:[{from:[v.state.items[2].position[0]+50,v.state.items[2].position[1]+25],to:[v.state.items[2].position[0]+150,500*(.8-.2)+25],orientation:"horizontal"},{from:[v.context.items[2].position[0]+25,v.context.items[2].position[1]],to:[v.state.items[2].position[0]+160,v.state.items[2].position[1]+50]},{from:[v.context.items[2].position[0]+100,v.context.items[2].position[1]],to:[v.state.items[2].position[0]+185,v.state.items[2].position[1]+50]}]}])})}),z={step1:u,step2:m,step3:c,step4:l,step5:r,step6:j,step7:d,step8:g,step9:x,step10:f,step11:O,step12:h,step13:v,step14:y,step15:Object.assign({},y,{output:Object.assign({},y.output,{items:[].concat(Object(p.a)(y.output.items),[{id:"y3-o",val:"<span>\n          y<sub>3</sub>\n        </span>",name:"[STOP]",namePosition:"top",position:[y.output.items[3].position[0]+150,y.output.items[3].position[1]],lines:[{from:[y.state.items[3].position[0]+25,y.state.items[3].position[1]],to:[y.output.items[3].position[0]+175,y.output.items[3].position[1]+50]}]}])})})},V=n("9pxd"),k=n.n(V);s.a=function(){var t=Object(i.useState)(1),s=t[0],n=t[1],p=z["step"+s];return o.a.createElement("div",{className:k.a["rnn-continaer"]},o.a.createElement(e.a,{data:p,step:s,animationHeight:500,animationWidth:1200,id:"image-with-attention"}),o.a.createElement(a.a,{onStepForward:function(){n(s+1)},onStepBackward:function(){n(s-1)},prevDisabled:s<2,nextDisabled:s===Object.keys(z).length}))}},"9pxd":function(t,s,n){t.exports={"rnn-continaer":"ImageWithAttention-module--rnn-continaer--_Ihkg"}},yfc5:function(t,s,n){t.exports=n.p+"static/person_smile-c4056aa3af956cc6de4850267aa816b2.jpg"}}]);
//# sourceMappingURL=ef2195df9018d9abca3b02c70163420014506ae7-0cc2d6e5430c5b2f92c8.js.map